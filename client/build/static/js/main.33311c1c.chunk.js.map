{"version":3,"sources":["Auth.js","Landing/Landing.js","Home/LocationBar.jsx","Map/Map.js","_helpers/SortHelper.js","Home/Home.jsx","_helpers/ChartHelpers.js","SurveyEntry/SurveyCharts.jsx","NewSurveyForm/debrisInfo.js","SurveyEntry/SurveyTableRow.js","SurveyEntry/SurveyEntry.jsx","NewSurveyForm/TableRows/AccumulationSurveyRow.jsx","NewSurveyForm/SurveySubsections/AccumulationSurvey.jsx","NewSurveyForm/SurveySubsections/MicroDebrisSurvey.jsx","NewSurveyForm/TableRows/RibScanRow.jsx","NewSurveyForm/SurveySubsections/SurfaceRibScan.jsx","NewSurveyForm/BeachSearch.jsx","NewSurveyForm/SurveySubsections/SurveyArea.jsx","NewSurveyForm/SurveySubsections/TeamInformation.jsx","NewSurveyForm/TableRows/ReviewTable.js","NewSurveyForm/TableRows/ASRowReview.js","NewSurveyForm/SurveySubsections/Review.jsx","NewSurveyForm/SurveyForm.jsx","UserProfile/UserProfile.js","Protocol/Protocol.js","About/About.js","SurveyForm/ChooseForm.js","Location/Charts.jsx","Location/Location.jsx","PageNotFound/PageNotFound.js","Header/Header.js","Footer/Footer.js","App.jsx","serviceWorker.js","index.js","Landing/beach-edit.jpg","Protocol/COI.png","About/bottle.jpg","About/COI.png"],"names":["Auth","Object","classCallCheck","this","auth0","WebAuth","domain","process","clientID","redirectUri","audience","responseType","scope","login","bind","logout","handleAuthentication","isAuthenticated","getAccessToken","getProfile","getLoggedInProfile","authorize","fn","_this","parseHash","err","authResult","accessToken","idToken","setSession","window","location","replace","errorDescription","expiresAt","JSON","stringify","expiresIn","Date","getTime","localStorage","setItem","getItem","Error","token","cb","_this2","client","userInfo","profile","userProfile","removeItem","base","encodeURIComponent","parse","LandingPage","props","background_image","backgroundImage","concat","background","height","react_default","a","createElement","className","style","id","auth","onClick","Link","to","isAuth","borderRadius","padding","display","width","position","top","left","transform","margin","e","disableError","LocationBar","possibleConstructorReturn","getPrototypeOf","call","handleAccordionClick","state","surveys","length","clicked","getSurveysFromBeach","accordionWrapper","target","parentElement","accordionContent","nextSibling","classList","contains","remove","add","assertThisInitialized","createHTMLForEntries","setState","beachID","_id","axios","get","then","res","_arr","keys","data","_i","month","survey","catch","console","log","surveyDay","_this3","surveyID","promise","push","all","response","map","surveysHTML","key","pathname","beachName","n","info","toLocaleDateString","path","textDecoration","color","_numOfSurveys","entryString","Component","CustomMarker","displayText","$hover","text","beachBubble","Map","loadCommentsFromServer","pollInterval","url","setInterval","clearInterval","_this4","GoogleMapsMarkers","comment","lat","lon","Map_CustomMarker","lng","lib_default","defaultCenter","center","defaultZoom","zoom","bootstrapURLKeys","defaultProps","beachNameFilter","beaches","sort","b","Home","showEntries","locationNodes","_this$state","loaded","error","rawData","searchResult","filter","view","styleMain","loadBeaches","handleSearch","handleSearchChange","getTotalDebris","handleViewTypeChange","handleFilterChange","changeFilter","value","container","document","getElementById","filterName","lastMod","sortedBeachList","params","q","dataArray","dataTotals","i","rawStats","stats","TODF","trash","totalWeight","main","mainOffset","offsetTop","availSpace","documentElement","clientHeight","_this5","numOfSurveys","Home_LocationBar","type","onChange","placeholder","overflowY","src_Map_Map","data-uk-height-viewport","sumTotals","isSRS","attr","surveyDate","localDate","survDate","trashData","hasOwnProperty","weathered","fresh","ReactChartkick","addAdapter","Chart","PieChart","_ref2","chartData","react_chartkick_esm","legend","library","animation","animateRotate","responsive","DebrisInfo","cigaretteButts","fishingLineRope","plasticCups","plasticStraws","filmedPlastic","miscPlastic","plasticBottlesCaps","styrofoam","woodPaper","foodOrganic","urethaneFoam","metal","glass","cottonCloth","aluminumCans","hygieneItems","tileBrick","misc","getDebrisNameById","getDebrisMap","SurveyTableRow","name","debrisInfo","SurveyEntry","getSurvey","userID","sub","split","surveyData","survData","editable","getChartData","getBeachInfo","bID","SRSDebris","SRSChartDataObject","thisDebrisTotal","keysSRS","cleanedKeysSorted","cleanedKey","chartDataSRS","srsSelected","ASDebris","ASChartDataObject","keysAS","chartDataAS","debrisNA","deleteSurvey","delete","dos","deletedComment","click","alert","editSurvey","editBtns","Fragment","data-uk-toggle","data-uk-modal","data-uk-close","match","handleChartTypeChange","renderOptions","Redirect","SRSRows","ASRows","_this$state$surveyDat","SurveyEntry_SurveyTableRow","weight","numOfP","reason","st","slope","aspect","majorUse","lastTide","nextTide","nroDist","nroName","windDir","data-uk-grid","user","f","l","org","email","prox","debris","other","rec","com","s","p","rr","sea","wind","dir","spd","cmpsDir","time","SurveyCharts_PieChart","AccumulationSurveyRow","min","defaultValue","updateAS","AccumulationSurvey","tableRows","TableRows_AccumulationSurveyRow","umd","role","MicroDebrisSurvey","microFreshTotalRib1","updateSurveyState","microWeatheredTotalRib1","microFreshTotalRib2","microWeatheredTotalRib2","microFreshTotalRib3","microWeatheredTotalRib3","microFreshTotalRib4","microWeatheredTotalRib4","RibScanCell","ribNumber","updateSRS","RibScanRow","RibScanRow_RibScanCell","SurfaceRibScan","TableRows_RibScanRow","SRSData","BeachSearch","query","results","timeout","showItems","getInfo","slice","handleInputChange","setSurveyData","search","clearTimeout","that","setTimeout","onSuggestionClick","autofill","ref","input","options","r","uk-dropdown","SurveyArea","updateLatLonFront","latDeg","Math","floor","tempDecimal","latMin","latSec","latDir","sign","lonDeg","lonMin","lonSec","lonDir","latitude","longitude","coordInfo","updateCoordState","showOtherUsage","showOtherReason","showOtherSubstrate","NewSurveyForm_BeachSearch","usageRecreation","updateCheckedState","usageCommercial","checked","usageOther","locationChoiceDebris","locationChoiceProximity","locationChoiceOther","compassDegrees","riverName","riverDistance","tideTypeB","tideTypeA","tideHeightB","tideTimeB","tideHeightA","tideTimeA","windSpeed","substrateTypeSand","substrateTypePebble","substrateTypeRipRap","substrateTypeSeaweed","substrateTypeOther","TeamInformation","expanded","userFirst","required","userLast","orgName","orgLoc","cleanUpDate","cleanUpTime","RibScanRowReview","ASRowReview","Review","calculateFields","parsedRows","item","condition","rib","Array","ReviewTable_RibScanRowReview","ASData","parsedKey","freshWeath","TableRows_ASRowReview","d","displayStrings","usage","locChoice","subType","textAlign","rib1Start","rib2Start","rib3Start","rib4Start","rib1End","rib2End","rib3End","rib4End","SurveyForm","riverDist","prevState","val","showInputPage","invalidForm","showAlert","SurveySubsections_TeamInformation","SurveySubsections_SurveyArea","SurveySubsections_SurfaceRibScan","SurveySubsections_AccumulationSurvey","SurveySubsections_MicroDebrisSurvey","moveToReview","showReviewPage","moveToInput","SurveySubsections_Review","moveToSubmit","showSubmitPage","isInputting","isReviewing","isSubmitted","prepareForm","undefined","invalid","displayIDs","requiredIDs","ids","invalidInput","validate","updateDisplayStrings","form","post","survID","details","message","word","txt","charAt","toUpperCase","substr","toLowerCase","sec","parseFloat","totals","totalsArray","noNum","trash_id","parseInt","isNaN","noAcc","show","calcTotalsSRS","calcTotalsAS","beachData","convertToDecimalDegrees","element","UserProfile","addUserEntries","root","newHTML","j","entries","date","innerHTML","_this$props$auth","src","picture","alt","href","ProtocolPage","coi","download","AboutPage","bottle","ChooseForm","BasicCleanUp","handleFormUpdate","setLocalStorage","defineProperty","ColumnChart","changeBarGraph","showSRSData","srsBarData","asBarData","_ref","animateScale","Location","getStats","surveyIDs","trueSurveys","categories","typesOfDebrisFound","total","cleanCategories","infoEntry","round","beachStats","pieChartData","getLatLon","bData","_this$state$beachData","subDate","submitDate","entry","checkRange","num","isLat","isInRange","Charts_ColumnChart","Charts_PieChart","PageNotFound","Submenu","Menu","handleHover","showAboutMenu","handleLeave","onMouseLeave","textTransform","onMouseEnter","Header_Submenu","Footer","App","require","config","headerRoutes","BrowserRouter","Route","render","Header","Switch","exact","Landing","src_Home_Home","NewSurveyForm_SurveyForm","component","LocationPage","src_UserProfile_UserProfile","Protocol","About","Boolean","hostname","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.33311c1c.chunk.js","sourcesContent":["import auth0 from 'auth0-js';\n\n/*redirectUri: 'https://marineplastics.herokuapp.com/home', for prod\nredirectUri: 'http://localhost:3000/home', for dev*/\nexport default class Auth {\n  auth0 = new auth0.WebAuth({\n    domain: process.env.REACT_APP_AUTH_DOMAIN,\n    clientID: process.env.REACT_APP_AUTH_CLIENT_ID,\n    redirectUri: process.env.REACT_APP_AUTH_LOGIN_REDIRECT_URI,\n    audience: process.env.REACT_APP_AUTH_AUDIENCE,\n    responseType: 'token id_token',\n    scope: 'openid email profile'\n  });\n\n  userProfile;\n\n  constructor() {\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.getAccessToken = this.getAccessToken.bind(this);\n    this.getProfile = this.getProfile.bind(this);\n    this.getLoggedInProfile = this.getLoggedInProfile.bind(this);\n  }\n\n  async login() {\n    await this.auth0.authorize();\n  }\n  handleAuthentication(fn) {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        this.setSession(authResult);\n        window.location.replace('/home');\n      } else if (err) {\n        fn(err.errorDescription);\n      }\n    });\n  }\n\n  setSession(authResult) {\n    // Set the time that the Access Token will expire at\n    let expiresAt = JSON.stringify((authResult.expiresIn * 1000) + new Date().getTime());\n    localStorage.setItem('access_token', authResult.accessToken);\n    localStorage.setItem('id_token', authResult.idToken);\n    localStorage.setItem('expires_at', expiresAt);\n  }\n\n  getAccessToken() {\n    const accessToken = localStorage.getItem('access_token');\n    if(!accessToken) {\n      throw new Error('No access token found');\n    }\n    return accessToken;\n  }\n\n  getProfile(token, cb) {\n    // let accessToken = this.getAccessToken();\n    this.auth0.client.userInfo(token, (err, profile) => {\n      if (profile) {\n        this.userProfile = profile;\n      }\n      cb(err, profile);\n    });\n  }\n\n  getLoggedInProfile(cb) {\n    this.getProfile(this.getAccessToken(), cb);\n  }\n\n  logout() {\n    // Clear Access Token and ID Token from local storage\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('expires_at');\n    // navigate to the home route\n    let base = encodeURIComponent(process.env.REACT_APP_AUTH_LOGOUT_REDIRECT_URI);\n    window.location.replace('https://' + process.env.REACT_APP_AUTH_DOMAIN + '/v2/logout?returnTo=' + \n      base + '&client_id=' + process.env.REACT_APP_AUTH_CLIENT_ID); /* Logout of auth0 */\n  }\n\n  isAuthenticated() {\n    // Check whether the current time is past the\n    // Access Token's expiry time\n    // Added check to make sure localstorage is defined\n    if (typeof localStorage === 'undefined') {\n      return false;\n    } else {\n      let expiresAt = JSON.parse(localStorage.getItem('expires_at'));\n      return new Date().getTime() < expiresAt;\n    }\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport background from './beach-edit.jpg';\nimport './landing.css'\n\n// the authentication object is passed through props from App.js\n// which is used to check if the user is currently logged in\n// and to sign in (links in header depend on status)\n\nexport function LandingPage(props) {\n  // force the page to have these styles\n  const background_image = {\n    backgroundImage: `url(${background})`,\n    height: `100vh`\n  };\n\n  return (\n    <div className=\"uk-width-1-1 uk-flex uk-flex-row\">\n\n      <div className=\"uk-width-1-3 uk-background uk-background-cover\" style={ background_image}>\n        {/* picture */}\n      </div>\n\n      <div className=\"uk-width-2-3 uk-padding-large info\">\n        {/*sign up*/}\n\n        <div className=\"uk-flex uk-flex-middle uk-flex-column\">\n\n          <div id=\"header-text\">\n            Welcome to the Marine Plastics Monitor.\n          </div>\n\n          <div className=\"uk-flex uk-flex-column intro-text\">\n            <p>Marine debris is one of the top three concerns for ocean health today and is only getting worse because of the rapid rate at which plastic products are made. The impacts of debris in the environment are devastating, but anyone can help reduce the damage by participating in or leading beach cleanups.</p>\n            <p>Beyond beach cleanups, marine debris monitoring programs are necessary to compare debris sources, amounts, locations, and movement internationally. This data can be used to influence policy and provide insight into where problem areas are.</p>\n            <p>To combine the power of beach cleanups and marine debris monitoring, we have developed a standardized protocols to gather data from beach cleanups and ways to analyze the differences in debris between regions and over time.</p>\n          </div>\n\n          <div className=\"uk-flex uk-flex-column uk-padding\">\n            { props.auth.isAuthenticated()\n              ? null\n              : (<button\n                  className=\"uk-button uk-button-primary uk-button-large sign-up-button\"\n                  onClick={ props.auth.login }\n                >\n                  Sign Up\n                </button>)\n            }\n              <Link className=\"uk-button uk-button-default uk-button-large guest-button\" to=\"/home\">\n                { props.auth.isAuthenticated() ? 'Continue' : 'Continue as Guest' }\n              </Link>\n          </div>\n\n        </div>\n      </div>\n\n\n\n      { props.isAuth ? <div className=\"uk-alert-primary\" style={{borderRadius:\"10px\",padding:\"5px\",display:\"inline-block\", height:\"content\",width:\"content\",position:\"absolute\",top:\"20%\",left:\"50%\",transform:\"translateX(-50%)\"}}>\n          {props.isAuth}\n          <button style={{margin:\"5px\"}} onClick={e=>{props.disableError()}}>OK</button>\n      </div> : null }\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass LocationBar extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            surveys: [],\n            clicked: false //Prevents the user from spamming the click button and loading the surveys multiple times\n        }\n        this.getSurveysFromBeach = this.getSurveysFromBeach.bind(this);\n        this.createHTMLForEntries = this.createHTMLForEntries.bind(this);\n    };\n\n    // Called when a user expands the accordion\n    // Fetches surveys listed under the beach that is clicked\n    getSurveysFromBeach() {\n        this.setState({clicked : true})\n        let beachID = this.props.location._id;\n\n        axios.get('/beaches/' + beachID)\n          .then(res => {\n\n            // For every month returned by the get request, render html that links to survey page\n            // Then append that html to the surveysHTML array, which is then updated to the state\n            for (let month of Object.keys(res.data)) {\n                let survey = res.data[month]\n                this.createHTMLForEntries(month, survey);\n\n            }\n\n          })\n          .catch(err => {\n            console.log(err);\n          })\n      }\n\n    // returns HTML for every entry in the sorted array of locations\n    // should display date and contain a link to specific survey page\n    createHTMLForEntries(month, survey) {\n        let surveyID = survey.survey;\n        let promise = [];\n        let surveyDay;\n        //We need to use a promise here because we want the surveys to be displayed in\n        //the correct order, ie by date\n        promise.push(axios.get(`/beaches/surveys/${surveyID}/date`));\n\n        axios.all(promise)\n            .then(response => {\n                response.map(res => surveyDay = new Date(res.data));\n            })\n            .then(() => {\n                let surveysHTML = this.state.surveys;\n                surveysHTML.push(\n                    <li key={`entry-${surveyID}`}>\n                        <Link className=\"uk-link-muted\"\n                        to={{ pathname: `/surveys/${surveyID.replace(' ', '-')}`,\n                                state: {beachName: this.props.location.n, surveyID: surveyID, info: this.props.location,\n                                userProfile: this.props.userProfile} }}>\n                            {surveyDay.toLocaleDateString()}\n                        </Link>\n                    </li>\n                );\n                this.setState({surveys: surveysHTML})\n            })\n    }\n\n    handleAccordionClick = (e) => {\n        if(this.state.surveys.length === 0 && !this.state.clicked)\n            this.getSurveysFromBeach();\n\n        let accordionWrapper = e.target.parentElement;\n        let accordionContent = e.target.nextSibling;\n        if (e.target.classList.contains('uk-text-muted')) {\n          accordionWrapper = e.target.parentElement.parentElement;\n          accordionContent = e.target.parentElement.nextSibling;\n        }\n\n        if (accordionWrapper.classList.contains('uk-open')) {\n          accordionWrapper.classList.remove('uk-open');\n          accordionContent.style.display = 'none';\n        } else {\n          accordionWrapper.classList.add('uk-open');\n          accordionContent.style.display = 'block';\n        }\n    }\n\n    render() {\n        return (\n        <div className=\"uk-card uk-card-default uk-card-body uk-margin \">\n            <div>\n                <ul className=\"uk-accordion uk-margin-remove-bottom\">\n                    <li>\n                        <span className=\"survey-bar uk-accordion-title uk-margin-remove-bottom\" onClick={this.handleAccordionClick}>\n                        <Link to={{ pathname: `/location/${this.props.path}`, state: { data: this.props.location, userProfile: this.props.userProfile  } }} style={{ textDecoration: 'none', color: 'black'  }}>\n                            {this.props.location.n}\n                            </Link>\n                            <span className=\"uk-text-muted uk-text-small uk-margin-remove-bottom\">\n                                {this.props.location._numOfSurveys} {this.props.entryString}\n                            </span>\n                        </span>\n                        <div className=\"uk-accordion-content\" style={{ display: 'none' }}>\n                        <p>\n                        <Link to={{ pathname: `/location/${this.props.path}`, state: { data: this.props.location,\n                                    userProfile: this.props.userProfile } }}>\n                                    Go to location page\n                        </Link>\n                            </p>\n                            <ul className=\"uk-list uk-list-bullet uk-padding-remove-left\">\n                                {this.state.surveys.length > 0 ? this.state.surveys : \"Loading surveys...\"}\n                            </ul>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    );\n    }\n}\nexport default LocationBar;\n","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\n\n\n\nclass CustomMarker extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      displayText : \"\"\n    };\n  }\n\n  /*\n   * render():\n   *  This function renders the marker using the data passed by Map's render function.\n   *  There are checks to see if the marker is being hovered over and if so, we can create\n   *  a bubble that will display the beach's name rather than rendering the beach name directly\n   *  on the marker. A link to the beach is also created with a pathname that removes the\n   *  spaces in the beach's name.\n   * \n   *  Arguments: None\n   *  \n   *  Returns: A rendered react component that changes behavior based on a mouse hover\n   * \n   *  Raises: None\n  */\n\n  render(){\n    const style = this.props.$hover ? \"custom-marker-hover\" : \"custom-marker\";\n    const beachName = this.props.$hover ? this.props.text : \"\";\n    const beachBubble = this.props.$hover ? \"tooltiptext\" : \"\";\n    let path = this.props.text.replace(/\\s/g, '');\n \n    return(\n      <div>\n        <Link className={style} to={{ pathname: `/location/${path}`, state:  {data: this.props.location, \n                                      userProfile: this.props.userProfile/*, getUserProfile: this.props.getUserProfile, \n        isAuth: this.props.isAuth*/ }} }>\n          <span className = {beachBubble}>\n            {beachName}\n          </span>\n        </Link>\n      </div>\n    );\n  }\n}\n\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { data: [] };\n    this.loadCommentsFromServer = this.loadCommentsFromServer.bind(this);\n    this.pollInterval = null;\n    this.url = '/beaches';\n  }\n\n\n  /*\n   *  loadCommentsFromServer()\n   *    This function has been refactored to work with the new database structure that Noel \n   *    developed. Rather than obtaining the survey data of each beach, it now just obtains\n   *    the beach name, ID, latitude, and longitude, which are the minimun parameters needed\n   *    for the locations to be displayed on the maps\n   * \n   *    Arguments: None\n   * \n   *    Returns: None (Stores object containing beach information in this.state.data)\n   * \n   *    Raises: None\n   * \n  */\n  loadCommentsFromServer() {\n    axios.get(this.url + '/map')\n      .then(res => {\n        this.setState({ data: res.data });\n      })\n  }\n\n  componentDidMount() {\n    if (!this.pollInterval) {\n      this.pollInterval = setInterval(this.loadCommentsFromServer, 2000)\n    }\n  }\n\n  //when incorporating into another project\n  //(with react-router for instance),\n  //this will prevent error messages every 2 seconds\n  //once the SurveyBox is unmounted\n  componentWillUnmount() {\n    // eslint-disable-next-line\n    this.pollInterval && clearInterval(this.pollInterval);\n    this.pollInterval = null;\n  }\n  static defaultProps = {\n     center: {lat: 36.965652,lng: -121.954729},\n     zoom: 13\n   };\n\n\n   render(){\n     // For each beach, create a marker that contains its id, lat, lon, and name\n    const GoogleMapsMarkers = this.state.data.map((comment) => (\n      (comment.lat && comment.lon)\n      ? <CustomMarker\n          key={comment._id}\n          lat={comment.lat}\n          lng={comment.lon}\n          text={comment.n}\n          location={comment}\n          userProfile={this.props.userProfile}\n          //getUserProfile={this.props.getUserProfile}\n          //isAuth={this.props.isAuth}\n          $hover={true}\n        /> \n      : null\n    ));\n    return (\n      <div id=\"mapView\">\n        <GoogleMapReact\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n          \n          \n          bootstrapURLKeys={{\n          key: ['AIzaSyC0KMFMCzYY0TZKQSSGyJ7gDW6dfBIDIDA']\n          }}\n        >\n          { GoogleMapsMarkers }\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n","// Accepts array of objects containing beach names and IDs\n// Returns array similar to input but sorted by last modified date\nexport function lastModFilter(beaches) {\n  \n  beaches.sort(function (a, b) {\n\n    a = new Date(a.lastMod).getTime();\n    b = new Date(b.lastMod).getTime();\n    return a < b ? 1 : a > b ? -1 : 0;\n  });\n\n  return beaches;\n}\n\nexport function beachNameFilter(beaches) {\n  beaches.sort(function (a, b) {\n    if (a.n < b.n) {\n      return -1;\n    } else if (a.n > b.n) {\n      return 1;\n    } else {\n      return 0;\n    }\n  });\n  return beaches;\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport LocationBar from './LocationBar';\nimport Map from '../Map/Map'\nimport { lastModFilter, beachNameFilter } from '../_helpers/SortHelper';\nimport './home.css';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      rawData: [],\n      searchResult: [],\n      filter: 'mod',\n      loaded: false,\n      error: false,\n\n      beaches: [],\n      surveys: [],\n      view: 'split'\n    };\n    this.styleMain = this.styleMain.bind(this);\n    this.loadBeaches = this.loadBeaches.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.getTotalDebris = this.getTotalDebris.bind(this);\n    this.handleViewTypeChange = this.handleViewTypeChange.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n    this.changeFilter = this.changeFilter.bind(this);\n    this.url = '/beaches';\n  }\n\n  // Load the beach info\n  loadBeaches() {\n    axios.get(this.url)\n      .then(res => {\n        this.setState({\n          beaches: res.data,\n          loaded: true\n        });\n      })\n      .catch(err => {\n        this.setState({\n          loaded: true,\n          error: true\n        });\n      })\n  }\n\n\n  async handleViewTypeChange(e) {\n    await this.setState({ view: e.target.value });\n    let container = document.getElementById(\"mainContainer\");\n\n    // Change the state to display the list only\n    if (this.state.view === \"list\") {\n      container.classList.add(\"list-view\");\n      container.classList.remove(\"map-view\");\n      container.classList.remove(\"split-view\");\n    }\n\n    //Display the map only  \n    if (this.state.view === \"map\") {\n      container.classList.add(\"map-view\");\n      container.classList.remove(\"list-view\");\n      container.classList.remove(\"split-view\");\n    }\n\n    //Display the split view\n    if (this.state.view === \"split\") {\n      container.classList.remove(\"list-view\");\n      container.classList.remove(\"split-view\");\n      container.classList.add(\"split-view\");\n      \n    }\n  }\n\n  // Upon initial load, data is loaded by last modification (from the backend)\n  // Called when filter type is changed, then calls changeFilter() to reorder entries\n  async handleFilterChange(e) {\n    let filterName = e.target.value;\n    await this.setState({ filter: filterName})\n    this.changeFilter();    \n  }\n\n  async changeFilter() {\n    let filterName = this.state.filter;\n    if (filterName === 'mod') {\n      let sortedBeachList = await lastModFilter(this.state.beaches);\n      this.setState({ beaches: sortedBeachList });\n    }\n    else if (filterName === 'beach') {\n      let sortedBeachList = await beachNameFilter(this.state.beaches);\n      this.setState({ beaches: sortedBeachList });\n    }\n  }\n\n  handleSearchChange(e) {\n    this.handleSearch(e.target.value, this.state.filter);\n  }\n\n  /* \n   * Query the database for beaches that match the substring that the use input \n  */\n  handleSearch(value) {\n    axios.get(\"/beaches/search\", { params: { q: value } })\n      .then(res => {\n        this.setState({ beaches: res.data });\n        this.changeFilter();\n      }).catch(err => {\n        console.log(err);\n      });\n  }\n\n  getTotalDebris(){\n    axios.get(this.url + \"/allstats\")\n      .then((res) => {\n        let dataArray = res.data;\n        var dataTotals = 0;\n        for(let i = 0; i < dataArray.length; i++){\n          let rawStats = dataArray[i].stats.TODF;\n          for(const trash in rawStats){\n            dataTotals += rawStats[trash];\n          }\n        }\n        this.setState({totalWeight : dataTotals});\n      })\n  }\n\n\n  showEntries = (locationNodes) => {\n    let errStr = \"Something went wrong!\"\n    let { loaded, error } = this.state;\n    if (loaded && !error) {\n      return locationNodes.length < 1 ? <div>No Entries</div> : locationNodes\n    }\n    return (\n      <span className={error ? \"err\" : \"loader\"}>\n        <span>{error ? errStr : \"\"}</span>\n        <span></span><span></span>\n      </span>\n    );\n  }\n\n  styleMain () {\n    let main = document.getElementById(\"mainContainer\");\n    let mainOffset = main.offsetTop;\n    let availSpace = document.documentElement.clientHeight - mainOffset;\n    main.style.height = availSpace + \"px\";\n  }\n\n  // once the component is on the page, checks the server for comments\n  componentDidMount() {\n    this.styleMain();\n    this.loadBeaches();\n    this.getTotalDebris();\n  }\n\n  render() {\n    // returns HTML for every entry in the sorted array of locations\n    let locationNodes = this.state.beaches.map((location, i) => {\n\n      let path = location.n.replace(\" \", \"\");\n      let entryString = location.numOfSurveys > 1 ? 'Entries' : 'Entry';\n\n      return <LocationBar\n        key={i}\n        location={location}\n        path={path}\n        entryString={entryString}\n        userProfile={this.props.userProfile}\n      />\n    });\n\n    return (\n\n        <div className=\"uk-align-center\">\n\n          <div className=\"uk-align-center uk-width-4-5\">\n            <form className=\"uk-grid uk-grid-small\">\n              <div className=\"uk-width-3-5\">\n                <input\n                  className=\"uk-input uk-form\"\n                  id=\"searchBar\"\n                  type=\"search\"\n                  onChange={this.handleSearchChange}\n                  placeholder=\"Search...\"\n                />\n              </div>\n\n              <div className=\"uk-width-1-5\">\n                <select className=\"uk-select uk-form\" id='type' onChange={this.handleFilterChange}>\n                  <option value=\"mod\">Last Modified</option>\n                  <option value=\"beach\">Beach Name</option>\n                </select>\n              </div>\n\n              <div className=\"uk-width-1-5\">\n                <select className=\"uk-select uk-form\" id=\"view-type\" onChange={this.handleViewTypeChange}>\n                  <option value=\"split\">List and Map</option>\n                  <option value=\"list\">List</option>\n                  <option value=\"map\">Map</option>\n\n                </select>\n              </div>\n            </form>\n          </div>\n\n          <div id=\"mainContainer\" className=\"split-view uk-align-center\">\n            {this.state.view === 'list'\n              ? <div id=\"locations\" className=\"uk-background-muted uk-padding\" style={locationNodes.length > 1 ? { overflowY: 'scroll' } : null}>\n                  {this.showEntries(locationNodes)}\n                </div>\n              : null\n            }\n\n            { this.state.view === 'map'\n              ? <Map userProfile={this.props.userProfile}/>\n              : null\n            }\n\n            { this.state.view === 'split'\n              ? <div className=\"uk-flex uk-flex-row uk-margin\">\n                  <div className=\"uk-width-1-3\">\n                    <div id=\"locations\"\n                          className=\"uk-background-muted uk-padding uk-height-expand\"\n                          data-uk-height-viewport=\"offset-top: true\"\n                          style={locationNodes.length > 1 ? { overflowY: 'scroll' } : null}>\n                      {this.showEntries(locationNodes)}\n                    </div>\n                  </div>\n                  <div className=\"uk-width-2-3\">\n                    <Map userProfile={this.props.userProfile}/>\n                  </div>\n                </div>\n              : null\n            }\n\n          </div>\n          {/* <div className=\"uk-section uk-section-primary uk-margin-top\">\n            <div className=\"uk-container\">\n              <h2 className=\"uk-text-center uk-heading\">{totalWeight} pieces of marine debris picked up so far!</h2>\n            </div>\n          </div> */}\n        </div>\n\n    );\n  }\n\n}\n\nexport default Home;\n","export function sumDebrisTypes (surveys) {\n    let res = {};\n    for (const survey in surveys) {\n        const srsDebris = surveys[survey].SRSDebris;\n        for (const trash in srsDebris) {\n            const trashData = srsDebris[trash];\n            if (!res.hasOwnProperty(trash))\n                res[trash] = trashData.weathered + trashData.fresh;\n            else\n                res[trash] += trashData.weathered + trashData.fresh;\n        }\n    }\n    return res;\n}\n\nexport function sumTotals (surveys, isSRS) {\n    let res = {};\n    let date = new Date(0);\n    let attr = isSRS ? 'SRSDebris' : 'ASDebris';\n    for (const surveyDate in surveys) {\n        const data = surveys[surveyDate][attr];\n        date = new Date(surveys[surveyDate].survDate);\n        let localDate = date.toLocaleDateString();\n        for (const trash in data) {\n            const trashData = data[trash];\n            if (!res.hasOwnProperty(localDate))\n                res[localDate] = trashData.weathered + trashData.fresh;\n            else\n                res[localDate] += trashData.weathered + trashData.fresh;\n        }\n    }\n    return res;\n\n}\n\nexport function getTotalPounds (data) {\n    let res = 0;\n    for (let i = 0; i < data.length; i++) {\n        if (data[i].weight) res += data[i].weight;\n    }\n    return res;\n}\n","import React, { Component } from 'react';\nimport { sumTotals } from \"../_helpers/ChartHelpers\";\nimport ReactChartkick, { ColumnChart as BarChart, PieChart as PChart } from \"react-chartkick\";\nimport { Chart } from \"chart.js\";\nReactChartkick.addAdapter(Chart);\n\nclass ColumnChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showSRSData: true,\n            srsBarData: sumTotals(this.props.chartData, true),\n            asBarData: sumTotals(this.props.chartData, false)\n        }\n    }\n\n    componentWillReceiveProps({ chartData }) {\n        this.setState({\n            srsBarData: sumTotals(chartData, true),\n            asBarData: sumTotals(chartData, false)\n        });\n\n    }\n\n    changeBarGraph = (e) => {\n        this.setState({ showSRSData: e.target.value === 'srs' });\n    }\n\n    render() {\n        return (\n            <div className=\"uk-width-3-4\">\n                <div className=\"uk-card uk-card-default uk-card-body\">\n                    <h3 className=\"uk-card-title\">Number of Pieces of Debris Collected</h3>\n                    <select className=\"uk-select uk-form-large\" id='bar-type' onChange={this.changeBarGraph}>\n                        <option value=\"srs\">in Surface Rib Scan Surveys</option>\n                        <option value=\"as\">in Accumulation Sweep Surveys</option>\n                    </select>\n                    <div className=\"uk-align-center\" style={{ width: '45vw' }}>\n                        <BarChart data={this.state.showSRSData ? this.state.srsBarData : this.state.asBarData} library={{ animation: { animateScale: true } }} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nlet PieChart = ({ chartData }) =>\n    <PChart id=\"pieChart\" data={chartData} legend = \"right\" library={{ animation: { animateRotate: true }, responsive: true }} height=\"370px\" width=\"450px\" />\n\nexport { ColumnChart, PieChart };","const DebrisInfo = {\n  cigaretteButts     : \"Cigarette Butts\"                  ,\n  fishingLineRope    : \"Fishing Line / Polypropylene Rope\",\n  plasticCups        : \"Plastic Cups\"                     ,\n  plasticStraws      : \"Plastic Straws\"                   ,\n  filmedPlastic      : \"Filmed Plastic\"                   ,\n  miscPlastic        : \"Misc. Plastic\"                    ,\n  plasticBottlesCaps : \"Plastic Bottles / Plastic Caps\"   ,\n  styrofoam          : \"Styrofoam\"                        ,\n  woodPaper          : \"Wood / Paper\"                     ,\n  foodOrganic        : \"Food / Organic\"                   ,\n  urethaneFoam       : \"Urethane Foam\"                    ,\n  metal              : \"Metal\"                            ,\n  glass              : \"Glass\"                            ,\n  cottonCloth        : \"Cotton / Cloth\"                   ,\n  aluminumCans       : \"Aluminum Cans\"                    ,\n  hygieneItems       : \"Hygiene Items\"                    ,\n  tileBrick          : \"Tile / Brick\"                     ,\n  misc               : \"Misc. (general)\"\n}\n\nfunction getDebrisNameById(id){\n    return DebrisInfo[id];\n}\n\nfunction getDebrisMap(){\n    return DebrisInfo;\n}\n\nexport { getDebrisNameById, getDebrisMap }\n","import React, { Component } from 'react';\n\nclass SurveyTableRow extends Component {\n  render() {\n    return (\n      <tr>\n        <td>{this.props.name}</td>\n        <td>{this.props.fresh}</td>\n        <td>{this.props.weathered}</td>\n      </tr>\n    );\n  }\n}\n\nexport default SurveyTableRow;\n","import React, { Component } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { PieChart } from './SurveyCharts'\nimport { getDebrisMap } from '../NewSurveyForm/debrisInfo'\n\nimport SurveyTableRow from './SurveyTableRow';\nimport './surveyEntry.css';\n\nconst debrisInfo = getDebrisMap();\n\n\nclass SurveyEntry extends Component {\n  constructor(props) {\n    super(props);\n    let { surveyID } = props.match.params;\n    this.state = {\n      beachName: this.props.location.state.beachName,\n      info: this.props.location.state.info,\n      surveyID,\n      surveyData: {},\n      userProfile: this.props.location.state.userProfile,\n\n      deletedComment: false,\n      srsSelected: true,\n      debrisNA: false,\n      editSurvey: false,\n      editable: false\n    };\n    //this.auth = new Auth();\n    this.handleChartTypeChange = this.handleChartTypeChange.bind(this);\n    this.renderOptions = this.renderOptions.bind(this);\n\n  }\n\n  /*\n   * For rendering the switch between the pie chart data\n   */\n  renderOptions() {\n    if (this.state.surveyData.SRSDebris \n         && this.state.surveyData.ASDebris) {\n      //render both options\n      return (\n        <select className=\"uk-select uk-form\" id=\"view-type\" onChange={this.handleChartTypeChange}>\n          <option value=\"srs\">Suface Rib Scan</option>\n          <option value=\"as\">Accumulation Sweep</option>\n        </select>\n      )\n    } else if (this.state.surveyData.SRSDebris) {\n      return <h3>Surface Rib Scan</h3>\n    } else if (this.state.surveyData.ASDebris) {\n      return <h3>Accumulation Sweep</h3>\n    } else {\n      return <h3>Debris total not available</h3>\n    }\n  }\n\n  /*\n   * If the user wants to select a survey to display, then we need to be able\n   * to set the state of the Survey component to tell it what to render\n   */\n\n  async handleChartTypeChange(e) {\n    await this.setState({ view: e.target.value });\n    if (this.state.view === 'srs') {\n      this.setState({ srsSelected: true })\n    } else {\n      this.setState({ srsSelected: false })\n    }\n  }\n\n  getSurvey = () => {\n    let userID;\n    if(this.state.userProfile){\n      userID = this.state.userProfile.sub.split(\"|\")[1];\n    } else {\n      userID = \"\";\n    }\n    \n    axios.get(`/beaches/surveys/${this.state.surveyID}`, {\n      params: {\n        userID\n      } \n    })\n      .then(res => {\n        this.setState({ surveyData: res.data.survData, editable: res.data.e });\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      .then(() => {\n        this.getChartData();\n      })\n      .then(()=> {\n        this.getBeachInfo();\n      })\n  }\n\n  getBeachInfo = () => {\n    axios.get(`/beaches/${this.state.surveyData.bID}/info`)\n      .then(res => {\n        this.setState({info: res.data});\n      })\n  }\n\n  /**\n   * getChartData: This function will need to extract the SRS and AS debris data in a way\n   * that the PieChart can process the data and display it\n   */\n\n  getChartData = () => {\n    //First, check to see if we even have the data\n\n    if (this.state.surveyData.SRSDebris) {\n      //If yes, then we need to sum up the number of pieces picked up for the given trash type\n      //add the weathered and fresh totals\n      var SRSChartDataObject = {};\n      for (const key in this.state.surveyData.SRSDebris) {\n        let thisDebrisTotal = this.state.surveyData.SRSDebris[key].fresh + this.state.surveyData.SRSDebris[key].weathered;\n        SRSChartDataObject[key] = thisDebrisTotal;\n      }\n      //Now we can sort the data so that it will display nicely\n      var keysSRS = Object.keys(SRSChartDataObject);\n      let cleanedKeysSorted = {};\n      keysSRS.sort((a, b) => { return (SRSChartDataObject[a] - SRSChartDataObject[b]) });\n      for (const i in keysSRS) {\n        let key = keysSRS[i];\n        let cleanedKey = debrisInfo[key]\n        if (cleanedKey === \"Fishing Line / Polypropylene Rope\")\n          cleanedKey = \"Fishing Line\";\n        if (cleanedKey === \"Plastic Bottles / Plastic Caps\")\n          cleanedKey = \"Plastic Bottles\";\n        cleanedKeysSorted[cleanedKey] = SRSChartDataObject[key];\n      }\n      //Set the state of the component\n      this.setState({ chartDataSRS: cleanedKeysSorted });\n    } else {\n      // We dont have survey data for the surface rib scan!!\n      this.setState({ srsSelected: false });\n    }\n    if (this.state.surveyData.ASDebris) {\n      var ASChartDataObject = {};\n      for (const key in this.state.surveyData.ASDebris) {\n        let thisDebrisTotal = this.state.surveyData.ASDebris[key].fresh + this.state.surveyData.ASDebris[key].weathered;\n        ASChartDataObject[key] = thisDebrisTotal;\n      }\n      //Now we can sort i guess\n      var keysAS = Object.keys(ASChartDataObject);\n      let cleanedKeysSorted = {};\n      keysAS.sort((a, b) => { return (ASChartDataObject[a] - ASChartDataObject[b]) });\n      for (const i in keysAS) {\n        let key = keysAS[i];\n        let cleanedKey = debrisInfo[key];\n        if (cleanedKey === \"Fishing Line / Polypropylene Rope\")\n          cleanedKey = \"Fishing Line\";\n        if (cleanedKey === \"Plastic Bottles / Plastic Caps\")\n          cleanedKey = \"Plastic Bottles\";\n        cleanedKeysSorted[cleanedKey] = ASChartDataObject[key];\n      }\n\n      this.setState({ chartDataAS: cleanedKeysSorted });\n    } else {\n      if (!this.state.surveyData.SRSDebris && !this.state.surveyData.ASDebris)\n        this.setState({ debrisNA: true });\n    }\n  }\n\n  deleteSurvey = () => {\n    axios.delete(`/beaches/surveys/${this.state.surveyID}`,\n      {\n        params:\n        {\n          bID: this.state.surveyData.bID,\n          dos: this.state.surveyData.survDate,\n          userID: this.state.userProfile ? this.state.userProfile.sub : ''\n        }\n      })\n      .then(res => {\n        this.setState({\n          deletedComment: true\n        })\n        let closeModal = document.getElementById('closeModalButton');\n        closeModal.click();\n        alert(\"Survey deleted successfully.\");\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n\n  editSurvey = () => {\n    axios.get(`/beaches/surveys/${this.state.surveyID}/edit`, {\n      params: {\n        id: this.state.userProfile ? this.state.userProfile : ''\n      }\n    })\n      .then(res => {\n        this.setState({ editSurvey: true });\n      })\n\n  }\n\n\n  // once the component is on the page, gets the surveyData from the server\n  componentDidMount() {\n    this.getSurvey();\n  }\n\n  editBtns = () => {\n    return (\n      <React.Fragment>\n        \n        {/* Edit and Delete buttons are disabled if user is not logged in or doesn't own the survey */}\n        { this.state.editable ? \n          <div className=\"uk-flex uk-flex-row\">\n            <button className=\"uk-button button-active uk-margin-right\" onClick={this.editSurvey}>Edit Survey</button>\n            <button className=\"uk-button button-active\"\n              data-uk-toggle=\"target: #modal\">\n              Delete Survey\n            </button>\n            \n          </div>\n          :\n          <div className=\"uk-flex uk-flex-row\">\n            <button className=\"uk-button button-disabled uk-margin-right\" \n              data-uk-toggle=\"target: #modal\">\n              Edit Survey</button>\n            <button className=\"uk-button button-disabled\"\n              data-uk-toggle=\"target: #modal\"\n              id=\"delete\">\n              Delete Survey</button>\n            \n          </div>\n        }\n\n        \n        {/* The modal that is opened by clicking on the edit/delete buttons */}\n        <div id=\"modal\" data-uk-modal>\n          <div className=\"uk-modal-dialog uk-modal-body\">\n            {this.state.editable ? \n              <div>\n                <h2>Are you sure you want to delete this survey?</h2>\n                <p>This action cannot be undone.</p>\n              </div>\n              :\n              <div>\n                <h2>You do not have permission to make changes to this survey.</h2>\n                <p>You may only edit or delete a survey if you created it and are logged in.</p>\n              </div>\n            }\n            \n            <p className=\"uk-text-right\">\n              \n              {this.state.editable ? \n                <div>\n                  <button className=\"uk-button uk-button-danger uk-margin-left\" onClick={this.deleteSurvey}>Delete</button> \n                  <button className=\"uk-button uk-button-default uk-modal-close\">Cancel</button>\n                </div>\n                : null}\n            </p>\n\n            <button id=\"closeModalButton\" className=\"uk-modal-close-default\" data-uk-close></button>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n\n  }\n\n  render() {\n    // redirect if data change actions are being taken\n    if (this.state.deletedComment) return <Redirect to=\"/home\" />\n    if (this.state.editSurvey) return <Redirect to=\"/survey\" />\n    // initializes to null because when component mounts, there is no data yet\n    let SRSRows = [];\n    let ASRows = [];\n\n    // if there is data (which is once the component mounts)\n    if (this.state.surveyData.SRSDebris) {\n      let { SRSDebris, ASDebris } = this.state.surveyData;\n      // for every type of trash, return a surveyTableRow component with the data\n      for (const trash in SRSDebris) {\n        const trashData = SRSDebris[trash];\n        SRSRows.push(\n          <SurveyTableRow\n            key={trash}\n            name={debrisInfo[trash]}\n            fresh={trashData.fresh}\n            weathered={trashData.weathered}\n          />\n        );\n      }\n\n      for (const trash in ASDebris) {\n        const trashData = ASDebris[trash];\n        ASRows.push(\n          <SurveyTableRow\n            key={trash}\n            name={debrisInfo[trash]}\n            fresh={trashData.fresh}\n            weathered={trashData.weathered}\n          />\n        );\n      }\n\n      document.getElementById('SRS-section').style.display = this.state.surveyData.SRSDebris ? 'block' : 'none';\n      document.getElementById('AS-section').style.display = this.state.surveyData.ASDebris ? 'block' : 'none';\n    }\n\n    if (this.state.surveyData.weight || this.state.surveyData.numOfP) {\n      document.getElementById('b-cleanup-section').style.display = 'block';\n    }\n\n    if (\n      this.state.surveyData.lat || this.state.surveyData.lon ||\n      this.state.surveyData.reason || this.state.surveyData.st ||\n      this.state.surveyData.slope || this.state.surveyData.aspect ||\n      this.state.surveyData.majorUse || this.state.surveyData.lastTide ||\n      this.state.surveyData.nextTide || this.state.surveyData.nroDist ||\n      this.state.surveyData.nroName || this.state.surveyData.windDir\n    ) {\n      document.getElementById('survey-area-section').style.display = 'block';\n    }\n\n    if (this.state.surveyData.lastTide || this.state.surveyData.nextTide) {\n      document.getElementById('tide-section').style.display = 'block';\n    }\n    return (\n      <div className=\"uk-container\">\n\n        {/* BEACH NAME AND DATE */}\n        <h2 className=\"uk-text-primary uk-heading-primary\">\n          <Link to={{\n            pathname: `/location/${this.state.beachName.replace(/\\s/g, '')}`, state: {\n              data: this.props.location.state.info,\n              userProfile: this.state.userProfile\n            }\n          }}>\n            {this.state.beachName}\n          </Link>\n          <span className=\"uk-text-muted uk-text-large uk-margin-left\">\n            {new Date(this.state.surveyData.survDate).toLocaleDateString()}\n          </span>\n        </h2>\n\n        {/* DATA SECTION CONTAINING SURVEY/SRS/AS */}\n        <div data-uk-grid=\"masonry: true\" className=\"uk-grid uk-grid-large uk-grid-match uk-width-1 uk-child-width-1-2\">\n          <div>\n            <div className=\"uk-card uk-card-default uk-card-body\">\n              <h3 className=\"uk-card-title\">Team Information</h3>\n              <p><strong>Team Leader:</strong> {this.state.surveyData.user ? this.state.surveyData.user.f\n                + \" \" + this.state.surveyData.user.l : \"\"}</p>\n              <p><strong>Organization:</strong> {this.state.surveyData.org}</p>\n              <p><strong>Email:</strong> {this.state.surveyData.email}</p>\n            </div>\n          </div>\n\n          <div id=\"b-cleanup-section\" >\n            <div className=\"uk-card uk-card-default uk-card-body\">\n              <h3 className=\"uk-card-title\">Basic Clean Up</h3>\n              {\n                this.state.surveyData.numOfP !== 0 ?\n                  <p><strong>Number of People:</strong> {this.state.surveyData.numOfP}</p> : null\n              }\n              {\n                this.state.surveyData.weight ?\n                  <p><strong>Total Weight:</strong> {this.state.surveyData.weight}</p> : null\n              }\n            </div>\n          </div>\n\n          {/* SURVEY AREA SECTION */}\n          <div id=\"survey-area-section\" style={{ display: 'none' }}>\n            <div className=\"uk-card uk-card-default uk-card-body\">\n              <h3 className=\"uk-card-title\">Survey Area</h3>\n              {\n                this.state.info.lat && this.state.info.lon ?\n                  <p><strong>GPS Coordinates:</strong> {this.state.info.lat}, {this.state.info.lon}</p> : null\n              }\n              {\n                this.state.surveyData.reason ?\n                  <p><strong>Reason for Location Choice: </strong>\n                    {\n                      this.state.surveyData.reason.prox ? \"Proximity\" : this.state.surveyData.reason.debris ? \"Debris\" : this.state.surveyData.reason.other\n                    }\n                  </p> : null\n              }\n              {\n                this.state.surveyData.majorUse ?\n                  <p><strong>Major Use: </strong>\n                    {this.state.surveyData.majorUse.rec ? \"Recreation\" : this.state.surveyData.majorUse.com ? \"Commercial\" : this.state.surveyData.majorUse.other}\n                  </p> : null\n              }\n              {\n                this.state.surveyData.st ?\n                  <p><strong>Substrate Type: </strong>\n                    {\n                      this.state.surveyData.st.s ? \"Sand\" : this.state.surveyData.st.p ? \"Pebbles\" : this.state.surveyData.st.rr ? \"Rip rap\" : this.state.surveyData.st.sea ? \"Seaweed\" : this.state.surveyData.st.other\n                    }\n                  </p> : null\n              }\n              {\n                this.state.surveyData.slope ?\n                  <p><strong>Beach Slope:</strong> {this.state.surveyData.slope}</p> : null\n              }\n              {\n                this.state.surveyData.aspect ?\n                  <p><strong>Beach Aspect:</strong> {this.state.surveyData.aspect}</p> : null\n              }\n              {\n                this.state.surveyData.wind ?\n                  <p><strong>Wind Direction: </strong> {this.state.surveyData.wind.dir}</p> : null\n              }\n              {\n                this.state.surveyData.wind ?\n                  <p><strong>Wind Speed: </strong> {this.state.surveyData.wind.spd} knots</p> : null\n              }\n              {\n                this.state.info.nroName ?\n                  <p><strong>Nearest River:</strong> {this.state.info.nroName}</p> : null\n              }\n              {\n                this.state.info.nroDist ?\n                  <p><strong>Distance to Nearest River:</strong> {this.state.info.nroDist}mi</p> : null\n              }\n              {\n                this.state.surveyData.cmpsDir ?\n                  <p><strong>Compass Direction:</strong> {this.state.surveyData.cmpsDir} Degrees</p> : null\n              }\n            </div>\n          </div>\n\n          {/* SRS SECTION*/}\n          <div id=\"SRS-section\" style={{ display: 'none' }}>\n            <div className=\"uk-card uk-card-default uk-card-body\">\n              <h3>Surface Rib Scan Survey</h3>\n              <table className=\"uk-table uk-table-striped\">\n                <thead>\n                  <tr>\n                    <th>Debris Type</th>\n                    <th>Amount Fresh</th>\n                    <th>Amount Weathered</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {SRSRows}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          {/* TIDE SECTION*/}\n          <div id=\"tide-section\" style={{ display: 'none' }}>\n            <div className=\"uk-card uk-card-default uk-card-body uk-margin-bottom\">\n              <h3 className=\"uk-card-title\">Tide Information</h3>\n              <h4>The Last Tide</h4>\n              <div>\n                {\n                  this.state.surveyData.lastTide ?\n                    (<div>\n                      <p><strong>Type:</strong> {this.state.surveyData.lastTide.type}</p>\n                      <p><strong>Time:</strong> {this.state.surveyData.lastTide.time}</p>\n                      <p><strong>Height:</strong> {this.state.surveyData.lastTide.height}</p>\n                    </div>) : null\n                }\n              </div>\n              <h4>The Next Tide</h4>\n              <div>\n                {\n                  this.state.surveyData.nextTide ?\n                    (<div>\n                      <p><strong>Type:</strong> {this.state.surveyData.nextTide.type}</p>\n                      <p><strong>Time:</strong> {this.state.surveyData.nextTide.time}</p>\n                      <p><strong>Height:</strong> {this.state.surveyData.nextTide.height}</p>\n                    </div>) : null\n                }\n              </div>\n            </div>\n          </div>\n\n          {/* AS SECTION */}\n          <div id=\"AS-section\" style={{ display: 'none' }}>\n            <div className=\"uk-card uk-card-default uk-card-body uk-margin-bottom\">\n              <h3>Accumulation Survey</h3>\n              <table className=\"uk-table uk-table-striped\">\n                <thead>\n                  <tr>\n                    <th>Debris Type</th>\n                    <th>Amount Fresh</th>\n                    <th>Amount Weathered</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {ASRows}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n\n        {/* DEBRIS TOTALS AND PIE CHART */}\n        <div className=\"uk-card uk-card-default uk-card-body uk-margin-bottom\">\n          <h2>Debris quantity totals for this survey:</h2>\n          <div className=\"uk-width-1-5\">\n            {this.renderOptions()}\n          </div>\n          {this.state.debrisNA ? null : <PieChart chartData={this.state.srsSelected ? this.state.chartDataSRS : this.state.chartDataAS} />}\n        </div>\n\n        {this.editBtns()}\n      </div>\n\n    );\n  }\n}\n\nexport default SurveyEntry;\n\n\n\n","import React, { Component } from 'react';\n\n\nclass AccumulationSurveyRow extends Component {\n\n    render() {\n      return(\n        <div className=\"uk-grid uk-child-width-1-3\">\n            <div>\n                <h5>{this.props.name}</h5>\n            </div>\n            <div>\n              <input\n                type=\"number\"\n                min=\"0\"\n                id={this.props.id + \"__fresh__accumulation\"}\n                className=\"uk-input\"\n                defaultValue={this.props.data[this.props.id + \"__fresh__accumulation\"]}\n                onChange={this.props.updateAS}\n              />\n            </div>\n            <div>\n                <input\n                  type=\"number\"\n                  min=\"0\"\n                  id={this.props.id + \"__weathered__accumulation\"}\n                  className=\"uk-input\"\n                  defaultValue={this.props.data[this.props.id + \"__weathered__accumulation\"]}\n                  onChange={this.props.updateAS}\n                />\n            </div>\n        </div>\n      );\n    }\n}\n\nexport default AccumulationSurveyRow;\n","import React, { Component } from 'react';\n\nimport {\n    AccordionItem,\n    AccordionItemTitle,\n    AccordionItemBody,\n} from 'react-accessible-accordion';\n\nimport AccumulationSurveyRow from '../TableRows/AccumulationSurveyRow';\n\nimport { getDebrisNameById, getDebrisMap } from '../debrisInfo';\n\nimport '../accordion-styles.css';\n\nclass AccumulationSurvey extends Component {\n\n  render() {\n\n    let tableRows = [];\n    for(const id in getDebrisMap()) {\n        tableRows.push(\n          <AccumulationSurveyRow\n              key={id}\n              id={id}\n              name={getDebrisNameById(id)}\n              updateAS={this.props.updateAS}\n              data={this.props.data}\n          />\n        )\n    }\n\n    return(\n      <AccordionItem className=\"accordion__item\">\n          <AccordionItemTitle className=\"accordion__title accordion__title--animated\">\n              <h2>Accumulation Survey</h2>\n              <div className=\"accordion__arrow\" role=\"presentation\" />\n          </AccordionItemTitle>\n          <AccordionItemBody className=\"accordion__body\">\n              <div className=\"uk-grid uk-child-width-1-3\">\n                  <div></div>\n                  <div><h4>Pieces Fresh</h4></div>\n                  <div><h4>Pieces Weathered</h4></div>\n              </div>\n              {tableRows}\n          </AccordionItemBody>\n      </AccordionItem>\n    )\n  }\n\n}\n\nexport default AccumulationSurvey\n","import React, { Component } from 'react';\n\nimport {\n    AccordionItem,\n    AccordionItemTitle,\n    AccordionItemBody,\n} from 'react-accessible-accordion';\n\nimport '../accordion-styles.css';\n\nclass MicroDebrisSurvey extends Component {\n\n  render() {\n    return(\n      <AccordionItem className=\"accordion__item\">\n          <AccordionItemTitle className=\"accordion__title accordion__title--animated\">\n              <h2>Micro Debris Survey</h2>\n              <div className=\"accordion__arrow\" role=\"presentation\" />\n          </AccordionItemTitle>\n          <AccordionItemBody className=\"accordion__body\">\n                  <div className=\"uk-grid uk-child-width-1-3\">\n                      <div></div>\n                      <div><h4>Fresh Total</h4></div>\n                      <div><h4>Weathered Total</h4></div>\n                  </div>\n\n                  <div className=\"uk-grid uk-child-width-1-3\">\n                    <div><h4>Rib #1</h4></div>\n                    <div>\n                      <input\n                        type=\"number\"\n                        min=\"0\"\n                        id={\"microFreshTotalRib1\"}\n                        value={this.props.data.microFreshTotalRib1}\n                        className=\"uk-input\"\n                        onChange={this.props.updateSurveyState}\n                      />\n                    </div>\n                    <div>\n                      <input\n                        type=\"number\"\n                        min=\"0\"\n                        id=\"microWeatheredTotalRib1\"\n                        className=\"uk-input\"\n                        defaultValue={this.props.data.microWeatheredTotalRib1}\n                        onChange={this.props.updateSurveyState}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"uk-grid uk-child-width-1-3\">\n                    <div><h4>Rib #2</h4></div>\n                    <div>\n                      <input\n                        type=\"number\"\n                        min=\"0\"\n                        id={\"microFreshTotalRib2\"}\n                        defaultValue={this.props.data.microFreshTotalRib2}\n                        className=\"uk-input\"\n                        onChange={this.props.updateSurveyState}\n                      />\n                    </div>\n                    <div>\n                      <input\n                        type=\"number\"\n                        min=\"0\"\n                        id=\"microWeatheredTotalRib2\"\n                        className=\"uk-input\"\n                        defaultValue={this.props.data.microWeatheredTotalRib2}\n                        onChange={this.props.updateSurveyState}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"uk-grid uk-child-width-1-3\">\n                    <div><h4>Rib #3</h4></div>\n                    <div>\n                      <input\n                        type=\"number\"\n                        min=\"0\"\n                        id={\"microFreshTotalRib3\"}\n                        defaultValue={this.props.data.microFreshTotalRib3}\n                        className=\"uk-input\"\n                        onChange={this.props.updateSurveyState}\n                      />\n                    </div>\n                    <div>\n                      <input\n                        type=\"number\"\n                        min=\"0\"\n                        id=\"microWeatheredTotalRib3\"\n                        className=\"uk-input\"\n                        defaultValue={this.props.data.microWeatheredTotalRib3}\n                        onChange={this.props.updateSurveyState}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"uk-grid uk-child-width-1-3\">\n                    <div><h4>Rib #4</h4></div>\n                    <div>\n                      <input\n                        type=\"number\"\n                        min=\"0\"\n                        id={\"microFreshTotalRib4\"}\n                        defaultValue={this.props.data.microFreshTotalRib4}\n                        className=\"uk-input\"\n                        onChange={this.props.updateSurveyState}\n                      />\n                    </div>\n                    <div>\n                      <input\n                        type=\"number\"\n                        min=\"0\"\n                        id=\"microWeatheredTotalRib4\"\n                        className=\"uk-input\"\n                        defaultValue={this.props.data.microWeatheredTotalRib4}\n                        onChange={this.props.updateSurveyState}\n                      />\n                    </div>\n                  </div>\n          </AccordionItemBody>\n      </AccordionItem>\n    )\n  }\n\n}\n\nexport default MicroDebrisSurvey\n","import React, { Component } from 'react';\n\nconst RibScanCell = (props) => {\n  return(\n    <div className=\"uk-grid uk-child-width-1-2\">\n      <div>\n          <input\n            type=\"number\"\n            min=\"0\"\n            id={props.id + \"__fresh__\" + props.ribNumber}\n            className=\"uk-input\"\n            defaultValue={props.data[props.id + \"__fresh__\" + props.ribNumber]}\n            onChange={props.updateSRS}\n          />\n      </div>\n      <div>\n          <input\n            type=\"number\"\n            min=\"0\"\n            id={props.id + \"__weathered__\" + props.ribNumber}\n            defaultValue={props.data[props.id + \"__weathered__\" + props.ribNumber]}\n            className=\"uk-input\"\n            onChange={props.updateSRS}\n            />\n      </div>\n    </div>\n  )\n}\n\n\n\nclass RibScanRow extends Component {\n\n    render() {\n      return(\n        <div className=\"uk-grid uk-child-width-1-5\">\n            <div>\n                <h5>{this.props.name}</h5>\n            </div>\n            <div>\n                <RibScanCell\n                  ribNumber='1'\n                  id={this.props.id}\n                  data={this.props.data}\n                  updateSRS={this.props.updateSRS}\n                  />\n            </div>\n            <div>\n              <RibScanCell\n                ribNumber='2'\n                id={this.props.id}\n                data={this.props.data}\n                updateSRS={this.props.updateSRS}\n                />\n            </div>\n            <div>\n              <RibScanCell\n                ribNumber='3'\n                id={this.props.id}\n                data={this.props.data}\n                updateSRS={this.props.updateSRS}\n                />\n            </div>\n            <div>\n              <RibScanCell\n                ribNumber='4'\n                id={this.props.id}\n                data={this.props.data}\n                updateSRS={this.props.updateSRS}\n                />\n            </div>\n        </div>\n      );\n    }\n}\n\n\nexport default RibScanRow;\n","import React, { Component } from 'react';\n\nimport {\n    AccordionItem,\n    AccordionItemTitle,\n    AccordionItemBody,\n} from 'react-accessible-accordion';\n\nimport RibScanRow from '../TableRows/RibScanRow';\n\nimport { getDebrisNameById, getDebrisMap } from '../debrisInfo';\n\n\nimport '../accordion-styles.css';\n\n\nclass SurfaceRibScan extends Component {\n\n  render() {\n\n    let tableRows = [];\n    for(const id in getDebrisMap()) {\n        tableRows.push(\n          <RibScanRow\n              key={id}\n              id={id}\n              name={getDebrisNameById(id)}\n              data={this.props.SRSData}\n              updateSRS={this.props.updateSRS}\n          />\n        )\n    }\n\n    return(\n      <AccordionItem className=\"accordion__item\">\n          <AccordionItemTitle className=\"accordion__title accordion__title--animated\">\n              <h2>Surface Rib Scan</h2>\n              <div className=\"accordion__arrow\" role=\"presentation\" />\n          </AccordionItemTitle>\n          <AccordionItemBody className=\"accordion__body\">\n                  <div className=\"uk-grid uk-child-width-1-5\">\n                    <div></div>\n                    <div><h4>Rib #1</h4></div>\n                    <div><h4>Rib #2</h4></div>\n                    <div><h4>Rib #3</h4></div>\n                    <div><h4>Rib #4</h4></div>\n                  </div>\n\n                  <div className=\"uk-grid uk-child-width-1-5\">\n                    <div><h5>Rib Start Point(m)</h5></div>\n                    <div>\n                      <input\n                        type='string'\n                        placeholder='Rib #1 Start'\n                        id='rib1Start'\n                        className='uk-input uk-margin'\n                        onChange={this.props.updateSurveyState}\n                        />\n                    </div>\n                    <div>\n                      <input\n                        type='string'\n                        placeholder='Rib #2 Start'\n                        id='rib2Start'\n                        className='uk-input uk-margin'\n                        onChange={this.props.updateSurveyState}\n                        />\n                    </div>\n                    <div>\n                      <input\n                        type='string'\n                        placeholder='Rib #3 Start'\n                        id='rib3Start'\n                        className='uk-input uk-margin'\n                        onChange={this.props.updateSurveyState}\n                        />\n                    </div>\n                    <div>\n                      <input\n                        type='string'\n                        placeholder='Rib #4 Start'\n                        id='rib4Start'\n                        className='uk-input uk-margin'\n                        onChange={this.props.updateSurveyState}\n                        />\n                    </div>\n                  </div>\n\n                  <div className=\"uk-grid uk-child-width-1-5\">\n                    <div><h5>Rib End Point(m)</h5></div>\n                    <div>\n                      <input\n                        type='string'\n                        placeholder='Rib #1 End'\n                        id='rib1End'\n                        className='uk-input uk-margin'\n                        onChange={this.props.updateSurveyState}\n                        />\n                    </div>\n                    <div>\n                      <input\n                        type='string'\n                        placeholder='Rib #2 End'\n                        id='rib2End'\n                        className='uk-input uk-margin'\n                        onChange={this.props.updateSurveyState}\n                        />\n                    </div>\n                    <div>\n                      <input\n                        type='string'\n                        placeholder='Rib #3 End'\n                        id='rib3End'\n                        className='uk-input uk-margin'\n                        onChange={this.props.updateSurveyState}\n                        />\n                    </div>\n                    <div>\n                      <input\n                        type='string'\n                        placeholder='Rib #4 End'\n                        id='rib4End'\n                        className='uk-input uk-margin'\n                        onChange={this.props.updateSurveyState}\n                        />\n                    </div>\n                  </div>\n\n                  <hr></hr>\n\n                  <div className=\"uk-grid data-uk-sticky\">\n                      <div className=\"uk-width-1-5\"></div>\n                      <div className=\"uk-width-1-5\">\n                          <div className=\"uk-grid\">\n                            <div className=\"uk-width-1-2\">\n                                <center><label>Rib #1 Fresh</label></center>\n                            </div>\n                            <div className=\"uk-width-1-2\">\n                                <center><label>Rib #1 Weathered</label></center>\n                            </div>\n                          </div>\n                      </div>\n                      <div className=\"uk-width-1-5\">\n                          <div className=\"uk-grid\">\n                            <div className=\"uk-width-1-2\">\n                                <center><label>Rib #2 Fresh</label></center>\n                            </div>\n                            <div className=\"uk-width-1-2\">\n                                <center><label>Rib #2 Weathered</label></center>\n                            </div>\n                          </div>\n                      </div>\n                      <div className=\"uk-width-1-5\">\n                          <div className=\"uk-grid\">\n                            <div className=\"uk-width-1-2\">\n                                <center><label>Rib #3 Fresh</label></center>\n                            </div>\n                            <div className=\"uk-width-1-2\">\n                                <center><label>Rib #3 Weathered</label></center>\n                            </div>\n                          </div>\n                      </div>\n                      <div className=\"uk-width-1-5\">\n                          <div className=\"uk-grid\">\n                            <div className=\"uk-width-1-2\">\n                                <center><label>Rib #4 Fresh</label></center>\n                            </div>\n                            <div className=\"uk-width-1-2\">\n                                <center><label>Rib #4 Weathered</label></center>\n                            </div>\n                          </div>\n                      </div>\n                  </div>\n\n                  {tableRows}\n\n          </AccordionItemBody>\n      </AccordionItem>\n    )\n  }\n\n}\n\nexport default SurfaceRibScan\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\n/**\n * Beach Search Component\n * Used in SurveyArea to suggest beaches while typing\n */\n\nclass BeachSearch extends Component {\n  state = {\n    query: '', //what gets sent to the backend\n    results: [], //list of beaches\n    timeout: null, //prevents pinging backend too much\n    showItems: false, //if true, show suggestions\n  }\n\n  //ping backend for results\n  getInfo = () => {\n    if (this.state.query) {\n      axios.get(\"/beaches/search\", { params: { q: this.state.query } })\n      .then(res => {\n        this.setState({ results: res.data.slice(0,4), showItems: true});\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      this.setState({ results: []});\n    }\n  }\n\n  //called when the input is changed\n  handleInputChange = () => {\n    this.props.setSurveyData('beachName', this.search.value);\n    this.props.setSurveyData('beachID', null);\n    this.setState({ query: this.search.value });\n    clearTimeout(this.state.timeout);\n    let that = this;\n    this.setState({timeout: setTimeout(function () {\n      that.getInfo();\n    }, 250)});\n  }\n\n  //called when a suggestion is clicked\n  onSuggestionClick = (res) => {\n    this.search.value = res.n;\n    this.props.autofill(res._id);\n    this.props.setSurveyData('beachName', res.n);\n    this.props.setSurveyData('beachID', res._id);\n    this.setState({ query: res.n, showItems: false});\n  }\n\n  render() {\n    //List of suggestions\n    const Suggestions = (props) => {\n      const options = props.results.map(r => (\n        <li key={r._id}>\n          <button\n            className=\"uk-button uk-button-default\"\n            onClick={()=>this.onSuggestionClick(r)}>{r.n}\n          </button>\n        </li>\n      ))\n      return (\n        <div style={{display:'block'}} uk-dropdown=\"bottom-left; duration:0\">\n          <ul className=\"uk-nav uk-dropdown-nav\">{options}</ul>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <label>Name<span className=\"uk-text-danger\">*</span></label>\n        <input id=\"beachName\" className=\"uk-input uk-margin\"\n          placeholder=\"Name of Beach\"\n          ref={input => this.search = input}\n          onChange={()=>this.handleInputChange()}\n          />\n        {this.state.showItems && this.state.query\n          ? <Suggestions results={this.state.results} />\n          : null}\n      </div>\n    )\n  }\n}\n\nexport default BeachSearch\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport {\n  AccordionItem,\n  AccordionItemTitle,\n  AccordionItemBody,\n} from 'react-accessible-accordion';\n\nimport '../accordion-styles.css';\n\nimport BeachSearch from '../BeachSearch';\n\nclass SurveyArea extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showOtherUsage: false,\n      showOtherReason: false,\n      showOtherSubstrate: false\n    }\n  }\n\n\n  updateLatLonFront = (lat, lon) => {\n\n        let latDeg = Math.floor(lat);\n        let tempDecimal = (lat - latDeg) * 60;\n        const latMin = Math.floor(tempDecimal);\n        const latSec = (tempDecimal - latMin) * 60;\n        const latDir = Math.sign(latDeg);\n        latDeg = latDeg * latDir;\n\n        let lonDeg = Math.floor(lon);\n        tempDecimal = (lon - lonDeg) * 60;\n        const lonMin = Math.floor(tempDecimal);\n        const lonSec = (tempDecimal - lonMin) * 60;\n        const lonDir = Math.sign(lonDeg);\n        lonDeg = lonDeg * lonDir;\n\n        return {latitude : lat, latDeg, latMin, latSec, latDir, longitude : lon, lonDeg, lonMin, lonSec, lonDir}\n\n  }\n\n  // ID to attribute\n\n\n  autofill = (beachID) => {\n    axios.get(\"/beaches/\" + beachID + \"/info\")\n      .then(res => {\n        const coordInfo = this.updateLatLonFront(res.data.lat, res.data.lon);\n        this.props.updateCoordState(coordInfo, res.data.nroName, res.data.nroDist);\n      }).catch(err => {\n        console.log(err);\n      });\n  };\n\n\n  render() {\n    return (\n      <AccordionItem className=\"accordion__item\">\n        <AccordionItemTitle className=\"accordion__title accordion__title--animated\">\n          <h2>Survey Area<span className=\"uk-text-danger\">*</span></h2>\n          <div className=\"accordion__arrow\" role=\"presentation\" />\n        </AccordionItemTitle>\n        <AccordionItemBody className=\"accordion__body\">\n          <div>\n            <h4>Beach Info</h4>\n          </div>\n\n          <div className=\"uk-grid uk-child-width-1-3\">\n            <div>\n              <BeachSearch id=\"beachName\" autofill={this.autofill} setSurveyData={this.props.setSurveyData} />\n            </div>\n            <div>\n              <label>Coordinates (Latitude)<span className=\"uk-text-danger\">*</span></label>\n              <div className=\"uk-grid uk-grid-collapse uk-margin uk-child-width-1-4\">\n                <div>\n                  <input\n                    type='number'\n                    placeholder='&#176;'\n                    id='latDeg'\n                    onChange={this.props.updateSurveyState}\n                    defaultValue={this.props.data.latDeg}\n                    className='uk-input uk-margin'\n                  />\n                </div>\n                <div>\n                  <input\n                    type='number'\n                    placeholder=\"'\"\n                    id='latMin'\n                    onChange={this.props.updateSurveyState}\n                    defaultValue={this.props.data.latMin}\n                    className='uk-input uk-margin'\n                  />\n                </div>\n                <div>\n                  <input\n                    type='number'\n                    placeholder='\"'\n                    id='latSec'\n                    onChange={this.props.updateSurveyState}\n                    defaultValue={this.props.data.latSec}\n                    className='uk-input uk-margin'\n                  />\n                </div>\n                <div>\n                  <select\n                    id='latDir'\n                    className='uk-select uk-margin'\n                    onChange={this.props.updateSurveyState}\n                    value={this.props.data.latDir}\n                  >\n                    {!this.props.data.latDir && <option></option>}\n                    <option value='1' >N</option>\n                    <option value=\"-1\">S</option>\n                  </select>\n                </div>\n\n              </div>\n            </div>\n            <div>\n              <label>Coordinates (Longitude):<span className=\"uk-text-danger\">*</span></label>\n              <div className=\"uk-grid uk-grid-collapse uk-margin uk-child-width-1-4\">\n                <div>\n                  <input\n                    type='number'\n                    placeholder='&#176;'\n                    id='lonDeg'\n                    onChange={this.props.updateSurveyState}\n                    defaultValue={this.props.data.lonDeg}\n                    className='uk-input uk-margin'\n                  />\n                </div>\n                <div>\n                  <input\n                    type='number'\n                    placeholder=\"'\"\n                    id='lonMin'\n                    onChange={this.props.updateSurveyState}\n                    defaultValue={this.props.data.lonMin}\n                    className='uk-input uk-margin'\n                  />\n                </div>\n                <div>\n                  <input\n                    type='number'\n                    placeholder='\"'\n                    id='lonSec'\n                    onChange={this.props.updateSurveyState}\n                    defaultValue={this.props.data.lonSec}\n                    className='uk-input uk-margin'\n                  />\n                </div>\n                <div>\n                  <select\n                    id='lonDir'\n                    className='uk-select uk-margin'\n                    onChange={this.props.updateSurveyState}\n                    value={this.props.data.lonDir}\n                  >\n                    {!this.props.data.lonDir && <option></option>}\n                    <option value='1' >E</option>\n                    <option value=\"-1\">W</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"uk-grid uk-child-width-1-3\">\n            <div>\n              <label>Major Usage<span className=\"uk-text-danger\">*</span></label>\n              <div>\n                <label>\n                  <input\n                    type='checkbox'\n                    id='usageRecreation'\n                    className='uk-checkbox'\n                    defaultValue={this.props.data.usageRecreation}\n                    onChange={this.props.updateCheckedState}\n                  />\n                </label> Recreational\n                    </div>\n              <div>\n                <label>\n                  <input\n                    type='checkbox'\n                    id='usageCommercial'\n                    className='uk-checkbox'\n                    defaultValue={this.props.data.usageCommercial}\n                    onChange={this.props.updateCheckedState}\n                  />\n                </label> Commercial\n                    </div>\n              <div>\n                <label>\n                  <input\n                    type='checkbox'\n                    className='uk-checkbox'\n                    onClick={e => this.setState({ showOtherUsage: e.target.checked })}\n                  />\n                </label> Other\n                    </div>\n              {this.state.showOtherUsage &&\n                (\n                  <div>\n                    <input\n                      type='string'\n                      id='usageOther'\n                      className='uk-input'\n                      defaultValue={this.props.data.usageOther}\n                      onChange={this.props.updateSurveyState}\n                    />\n                  </div>\n                )\n              }\n\n\n            </div>\n\n            <div>\n              <label>Reason for Location Choice<span className=\"uk-text-danger\">*</span></label>\n              <div>\n                <label>\n                  <input\n                    type='checkbox'\n                    id='locationChoiceProximity'\n                    onChange={this.props.updateCheckedState}\n                    defaultValue={this.props.data.locationChoiceDebris}\n                    className='uk-checkbox'\n                  />\n                </label> Proximity/Convenience\n                    </div>\n              <div>\n                <label>\n                  <input\n                    type='checkbox'\n                    id='locationChoiceDebris'\n                    onClick={this.props.updateCheckedState}\n                    defaultValue={this.props.data.locationChoiceProximity}\n                    className='uk-checkbox'\n                  />\n                </label> Known for Debris\n              </div>\n              <div>\n                <label>\n                  <input\n                    type='checkbox'\n                    className='uk-checkbox'\n                    onClick={e => this.setState({ showOtherReason: e.target.checked })}\n                  />\n                </label> Other\n                    </div>\n              {this.state.showOtherReason &&\n                (\n                  <div>\n                    <input\n                      type='string'\n                      id='locationChoiceOther'\n                      className='uk-input'\n                      defaultValue={this.props.data.locationChoiceOther}\n                      onChange={this.props.updateSurveyState}\n                    />\n                  </div>\n                )\n              }\n            </div>\n            <div>\n              <label>Compass Direction (When Facing the Water)<span className=\"uk-text-danger\">*</span></label>\n              <input\n                type='number'\n                placeholder='Degrees'\n                id='compassDegrees'\n                defaultValue={this.props.data.compassDegrees}\n                onChange={this.props.updateSurveyState}\n                className='uk-input uk-margin'\n              />\n            </div>\n          </div>\n\n          <hr></hr>\n\n          <div>\n            <h4>Nearest River Output</h4>\n          </div>\n\n          <div className=\"uk-grid uk-child-width-1-2\">\n            <div>\n              <label>River Name<span className=\"uk-text-danger\">*</span></label>\n              <input\n                type='string'\n                placeholder='Nearest River Output Name'\n                id='riverName'\n                defaultValue={this.props.data.riverName}\n                onChange={this.props.updateSurveyState}\n                className='uk-input uk-margin'\n              />\n            </div>\n            <div>\n              <label>Approximate Distance (ft)<span className=\"uk-text-danger\">*</span></label>\n              <input\n                type='number'\n                placeholder='Nearest River Output Distance'\n                id='riverDistance'\n                defaultValue={this.props.data.riverDistance}\n                onChange={this.props.updateSurveyState}\n                className='uk-input uk-margin'\n              />\n            </div>\n          </div>\n\n          <hr></hr>\n\n          <div className=\"uk-grid uk-child-width-1-2\">\n            <h4>Last Tide Before Clean Up</h4>\n            <h4>Next Tide After Clean Up</h4>\n          </div>\n\n          <div className=\"uk-grid uk-child-width-1-2\">\n            <div>\n              <label>Type<span className=\"uk-text-danger\">*</span></label>\n              <select\n                id='tideTypeB'\n                className='uk-select uk-margin'\n                onChange={this.props.updateSurveyState}\n                value={this.props.data.tideTypeB}\n              >\n                {!this.props.data.tideTypeB && <option>Please Select</option>}\n                <option value=\"low\">Low</option>\n                <option value=\"high\">High</option>\n              </select>\n            </div>\n            <div>\n              <label>Type<span className=\"uk-text-danger\">*</span></label>\n              <select\n                id='tideTypeA'\n                className='uk-select uk-margin'\n                onChange={this.props.updateSurveyState}\n                value={this.props.data.tideTypeA}\n              >\n                {!this.props.data.tideTypeA && <option>Please Select</option>}\n                <option value=\"low\">Low</option>\n                <option value=\"high\">High</option>\n              </select>\n            </div>\n          </div>\n\n          <div className=\"uk-grid uk-child-width-1-4\">\n            <div>\n              <label>Height (ft)<span className=\"uk-text-danger\">*</span></label>\n              <input\n                type=\"number\"\n                placeholder=\"Height\"\n                id='tideHeightB'\n                className='uk-input uk-margin'\n                onChange={this.props.updateSurveyState}\n                defaultValue={this.props.data.tideHeightB}\n              />\n            </div>\n            <div>\n              <label>Time<span className=\"uk-text-danger\">*</span></label>\n              <input\n                type=\"time\"\n                id='tideTimeB'\n                onChange={this.props.updateSurveyState}\n                defaultValue={this.props.data.tideTimeB}\n                className='uk-input uk-margin'\n\n              />\n            </div>\n            <div>\n              <label>Height (ft)<span className=\"uk-text-danger\">*</span></label>\n              <input\n                type=\"number\"\n                placeholder=\"Height\"\n                id='tideHeightA'\n                onChange={this.props.updateSurveyState}\n                defaultValue={this.props.data.tideHeightA}\n                className='uk-input uk-margin'\n              />\n            </div>\n            <div>\n              <label>Time<span className=\"uk-text-danger\">*</span></label>\n              <input\n                type=\"time\"\n                id='tideTimeA'\n                onChange={this.props.updateSurveyState}\n                defaultValue={this.props.data.tideTimeA}\n                className='uk-input uk-margin'\n\n              />\n            </div>\n          </div>\n\n          <hr></hr>\n\n          <div className=\"uk-grid uk-child-width-1-3\">\n            <div>\n              <h4>Wind</h4>\n              <label>Speed (knots)<span className=\"uk-text-danger\">*</span></label>\n              <input\n                type=\"number\"\n                placeholder=\"Speed (knots)\"\n                id='windSpeed'\n                onChange={this.props.updateSurveyState}\n                defaultValue={this.props.data.windSpeed}\n                className='uk-input uk-margin'\n\n              />\n\n              <label>Direction<span className=\"uk-text-danger\">*</span></label>\n              <select\n                id='windDir'\n                onChange={this.props.updateSurveyState}\n                value={this.props.data.windDir}\n                className='uk-input uk-margin'\n              >\n                {(!this.props.data.windDir) && <option>Please Select</option>}\n                <option value=\"n\">North</option>\n                <option value=\"ne\">Northeast</option>\n                <option value=\"e\">East</option>\n                <option value=\"se\">Southeast</option>\n                <option value=\"s\">South</option>\n                <option value=\"sw\">Southwest</option>\n                <option value=\"w\">West</option>\n                <option value=\"nw\">Northwest</option>\n              </select>\n            </div>\n            <div>\n              <h4>Slope</h4>\n              <label>Slope<span className=\"uk-text-danger\">*</span></label>\n              <select\n                id='slope'\n                className='uk-select uk-margin'\n                onChange={this.props.updateSurveyState}\n                value={this.props.data.slope}\n              >\n                {(!this.props.data.slope) && <option>Please Select</option>}\n\n                <option value=\"winter\">Winter Profile</option>\n                <option value=\"summer\">Summer Profile</option>\n              </select>\n            </div>\n            <div>\n              <h4>Substrate Type<span className=\"uk-text-danger\">*</span></h4>\n              <div className=\"uk-margin\">\n                <label>\n                  <input\n                    type='checkbox'\n                    id='substrateTypeSand'\n                    onChange={this.props.updateCheckedState}\n                    defaultValue={this.props.data.substrateTypeSand}\n                    className='uk-checkbox'\n                  />\n                </label> Sand\n              </div>\n              <div className=\"uk-margin\">\n                <label>\n                  <input\n                    type='checkbox'\n                    id='substrateTypePebble'\n                    onChange={this.props.updateCheckedState}\n                    defaultValue={this.props.data.substrateTypePebble}\n                    className='uk-checkbox'\n                  />\n                </label> Pebble\n              </div>\n              <div className=\"uk-margin\">\n                <label>\n                  <input\n                    type='checkbox'\n                    id='substrateTypeRipRap'\n                    onChange={this.props.updateCheckedState}\n                    defaultValue={this.props.data.substrateTypeRipRap}\n                    className='uk-checkbox'\n                  />\n                </label> Rip Rap\n              </div>\n              <div className=\"uk-margin\">\n                <label>\n                  <input\n                    type='checkbox'\n                    id='substrateTypeSeaweed'\n                    onChange={this.props.updateCheckedState}\n                    defaultValue={this.props.data.substrateTypeSeaweed}\n                    className='uk-checkbox'\n                  />\n                </label> Seaweed\n              </div>\n              <div>\n                <label>\n                  <input\n                    type='checkbox'\n                    className='uk-checkbox'\n                    onClick={e => this.setState({ showOtherSubstrate: e.target.checked })}\n                  />\n                </label> Other\n              </div>\n              {this.state.showOtherSubstrate &&\n                (\n                  <div>\n                    <input\n                      type='string'\n                      id='substrateTypeOther'\n                      className='uk-input'\n                      defaultValue={this.props.data.substrateTypeOther}\n                      onChange={this.props.updateSurveyState}\n                    />\n                  </div>\n                )\n              }\n            </div>\n          </div>\n\n          <div className=\"uk-padding-large uk-padding-remove-botom uk-width-1-1\">\n            <div className=\"uk-text uk-text-small uk-text-center uk-text-muted\"><span className=\"uk-text-danger\">*</span> = Indicates required field.</div>\n          </div>\n\n        </AccordionItemBody>\n      </AccordionItem>\n    )\n  }\n\n}\n\nexport default SurveyArea\n","import React, { Component } from 'react';\n\nimport {\n    AccordionItem,\n    AccordionItemTitle,\n    AccordionItemBody,\n} from 'react-accessible-accordion';\n\nimport '../accordion-styles.css';\n\nclass TeamInformation extends Component {\n\n  render() {\n    return(\n      <AccordionItem className=\"accordion__item\" expanded=\"true\">\n          <AccordionItemTitle className=\"accordion__title accordion__title--animated\">\n              <h2>Team Information<span className=\"uk-text-danger\">*</span></h2>\n              <div className=\"accordion__arrow\" role=\"presentation\" />\n          </AccordionItemTitle>\n          <AccordionItemBody className=\"accordion__body\">\n            \n            <div className=\"uk-child-width-1-2 uk-grid\">\n              <div>\n                <label>First Name<span className=\"uk-text-danger\">*</span></label>\n                <input\n                  type='string'\n                  placeholder='First Name'\n                  id='userFirst'\n                  className='uk-input uk-margin'\n                  defaultValue={this.props.data.userFirst}\n                  onChange={this.props.updateSurveyState}\n                  required\n                  />\n              </div>\n              <div>\n                <label>Last Name<span className=\"uk-text-danger\">*</span></label>\n                <input\n                  type='string'\n                  placeholder='Last Name'\n                  id='userLast'\n                  className='uk-input uk-margin'\n                  defaultValue={this.props.data.userLast}\n                  onChange={this.props.updateSurveyState}\n                  required\n                  />\n              </div>\n            </div>\n\n            <div className=\"uk-child-width-1-2 uk-grid\">\n              <div>\n                <label>Organization Name<span className=\"uk-text-danger\">*</span></label>\n                <input\n                  type='string'\n                  placeholder='Organization Name'\n                  defaultValue={this.props.data.orgName}\n                  onChange={this.props.updateSurveyState}\n                  id='orgName'\n                  className='uk-input uk-margin'\n                  required\n                  />\n              </div>\n              <div>\n                <label>Organization Location (City, Country)<span className=\"uk-text-danger\">*</span></label>\n                <input\n                  type='string'\n                  placeholder='Organization Location'\n                  defaultValue={this.props.data.orgLoc}\n                  onChange={this.props.updateSurveyState}\n                  id='orgLoc'\n                  className='uk-input uk-margin'\n                  required\n                  />\n              </div>\n            </div>\n\n            <div className=\"uk-grid uk-child-width-1-2\">\n              <div>\n                <label>Clean Up Date<span className=\"uk-text-danger\">*</span></label>\n                <input\n                  type='date'\n                  defaultValue={this.props.data.cleanUpDate}\n                  onChange={this.props.updateSurveyState}\n                  id='cleanUpDate'\n                  className='uk-input uk-margin'\n                  required\n                  />\n              </div>\n              <div>\n                <label>Clean Up Start Time<span className=\"uk-text-danger\">*</span></label>\n                <input\n                  type='time'\n                  defaultValue={this.props.data.cleanUpTime}\n                  onChange={this.props.updateSurveyState}\n                  id='cleanUpTime'\n                  className='uk-input uk-margin'\n                  required\n                  />\n              </div>\n            </div>\n\n            <div className=\"uk-padding-small uk-padding-remove-botom uk-width-1-1\">\n              <div className=\"uk-text uk-text-small uk-text-center uk-text-muted\"><span className=\"uk-text-danger\">*</span> = Indicates required field.</div>\n            </div>\n          </AccordionItemBody>\n      </AccordionItem>\n    )\n  }\n\n}\n\nexport default TeamInformation\n","import React, {Component} from 'react';\n\n\nexport default class RibScanRowReview extends Component {\n\n    render() {\n\n        return(\n            <tr>\n                <td>{this.props.name}</td>\n                <td>{this.props.fresh[0]}</td>\n                <td>{this.props.weathered[0]}</td>\n                <td>{this.props.fresh[1]}</td>\n                <td>{this.props.weathered[1]}</td>\n                <td>{this.props.fresh[2]}</td>\n                <td>{this.props.weathered[2]}</td>\n                <td>{this.props.fresh[3]}</td>\n                <td>{this.props.weathered[3]}</td>\n            </tr>\n        );\n    }\n  }\n\n\n","import React, { Component } from 'react'\n\nclass ASRowReview extends Component {\n    render() {\n        return (\n            <tr>\n                <td>{this.props.name}</td>\n                <td>{this.props.fresh}</td>\n                <td>{this.props.weathered}</td>\n            </tr>\n        );\n    }\n}\n\nexport default ASRowReview;","import React, { Component } from 'react';\nimport RibScanRowReview from '../TableRows/ReviewTable';\nimport ASRowReview from '../TableRows/ASRowReview';\nimport {getDebrisMap} from '../debrisInfo';\n\nconst debrisInfo = getDebrisMap();\n\nclass Review extends Component {\n\n  componentDidMount() {\n      this.calculateFields();\n  }\n\n  calculateFields() {\n\n  }\n\n  render() {\n    var SRSRows = [];\n    var ASRows = [];\n    // Parse the row info that we got from the data\n    var parsedRows = {};\n    /* parsedRows\n      {\n        cigaretteButts : {\n          fresh : [1, 2, 3, 4],\n          weathered : [5, 6, 7, 8]\n        },\n        ...\n      }\n    */\n    for(const key in this.props.SRSData) {\n      //keys of the form item__condition__rib\n      let item = key.split('__')[0];\n      let condition = key.split('__')[1];\n      let rib = key.split('__')[2] - 1; \n      //store info in parsedRows\n      if (!parsedRows[item]) {\n        parsedRows[item] = {fresh: new Array(4), weathered: new Array(4)};\n      }\n      parsedRows[item][condition][rib] = this.props.SRSData[key];\n    }\n    // Now take the parsed data and then create row objects for each \n    for (const key in parsedRows) {\n      SRSRows.push(\n        <RibScanRowReview \n          id = {key}\n          key = {key}\n          name = {debrisInfo[key]}\n          fresh = {parsedRows[key].fresh}\n          weathered = {parsedRows[key].weathered}\n        />\n      )\n    }\n    // Now we do a similar thing for the As Data\n    parsedRows = {};\n    for(const key in this.props.ASData) {\n      let parsedKey = key.split('__')[0];\n      let freshWeath = key.split('__')[1];\n      if(!parsedRows[parsedKey]) \n        parsedRows[parsedKey] = {fresh: 0, weathered:0};\n      \n      parsedRows[parsedKey][freshWeath] = this.props.ASData[key];\n    }\n\n    // Render the rows\n    for (const key in parsedRows){\n      ASRows.push(\n        <ASRowReview\n          id={key}\n          key={key}\n          name = {debrisInfo[key]}\n          fresh = {parsedRows[key].fresh}\n          weathered={parsedRows[key].weathered}\n        />\n      )\n    }\n\n    const d = this.props.data;\n    const s = this.props.displayStrings;\n    \n    return(\n      <div className=\"uk-background-muted uk-padding\">\n        <div className=\"uk-card uk-card-default uk-card-body uk-card-hover\">\n            <h3 className=\"uk-card-title\">Team Information:</h3>\n            <p>Name: <b>{d.userFirst} {d.userLast}</b></p>\n            <p>Organization Name: <b>{d.orgName}</b></p>\n            <p>Organization Location: <b>{d.orgLoc}</b></p>\n            <p>Email Address: <b>{this.props.email}</b></p>\n            <p>Clean Up Date: <b>{d.cleanUpDate}</b></p>\n            <p>Clean Up Start Time: <b>{d.cleanUpTime}</b></p>\n        </div>\n\n        <br></br>\n\n        <div className=\"uk-card uk-card-default uk-card-body uk-card-hover\">\n            <h3 className=\"uk-card-title\">Survey Area:</h3>\n\n            <p>Beach Name: {d.beachName}</p>\n            <p>Beach Coordinates: {d.latitude} (lat), {d.longitude} (lon)</p>\n            {s.usage.length > 0 &&\n              <p>Major Usage: {s.usage}</p>\n            }\n            {s.locChoice.length > 0 &&\n              <p>Reason for Location Choice: {s.locChoice}</p>\n            }\n            {d.compassDegrees &&\n              <p>Compass Direction: {d.compassDegrees}<span>&#176;</span></p>\n            }\n            {d.riverName &&\n              <p>Nearest River Output Name: {d.riverName}</p>\n            }\n            {d.riverDistance &&\n              <p>Nearest River Output Distance: {d.riverDistance}</p>\n            }\n\n            {d.tideTypeB && d.tideTimeB && d.tideHeightB &&\n              <div>\n                <h4>Tide Before:</h4>\n                <p>Type: {d.tideTypeB} </p>\n                <p>Height: {d.tideHeightB}</p>\n                <p>Time: {d.tideTimeB}</p>\n              </div>\n            }\n            {d.tideTypeA && d.tideTimeA && d.tideHeightA &&\n              <div>\n                <h5>Tide After:</h5>\n                <p>{d.tideTypeA} tide of {d.tideTypeA} ft at{d.tideTimeA}</p>\n              </div>\n            }\n            {d.windSpeed &&\n              <p>Wind Speed: {d.windSpeed} knots</p>\n            }\n            {d.windDir &&\n              <p>Wind Direction: {d.windDir}</p>\n            }\n            {d.slope &&\n              <p>Slope: {d.slope}</p>\n            }\n            {s.subType.length > 0 &&\n              <p>Substrate Type: {s.subType}</p>\n            }\n        </div>\n\n        <br></br>\n\n        <div className=\"uk-card uk-card-default uk-card-body uk-card-hover\">\n              <h2>Surface Rib Scan</h2>\n              <table className='uk-table uk-table-striped uk-table-middle'>\n                <thead>  \n                  <tr>\n                    <th>Range</th>\n                    <th>Rib #1</th>\n                    <th>Rib #2</th>\n                    <th>Rib #3</th>\n                    <th>Rib #4</th>\n                  </tr>\n                </thead>\n                <tbody style={{textAlign: 'left'}}>\n                  <tr >\n                    <td >Rib Start</td>\n                    <td >{d.rib1Start}</td>\n                    <td>{d.rib2Start}</td>\n                    <td>{d.rib3Start}</td>\n                    <td >{d.rib4Start}</td>\n                  </tr>\n                  <tr>\n                    <td>Rib End</td>\n                    <td>{d.rib1End}</td>\n                    <td>{d.rib2End}</td>\n                    <td>{d.rib3End}</td>\n                    <td>{d.rib4End}</td>\n                  </tr>\n                </tbody>\n              </table>\n              <table className='uk-table uk-table-striped'>\n                <thead>\n                  <tr>\n                    <th>Debris Type</th>\n                    <th>Rib #1 Fresh</th>\n                    <th>Rib #1 Weathered</th>\n                    <th>Rib #2 Fresh</th>\n                    <th>Rib #2 Weathered</th>\n                    <th>Rib #3 Fresh</th>\n                    <th>Rib #3 Weathered</th>\n                    <th>Rib #4 Fresh</th>\n                    <th>Rib #4 Weathered</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {SRSRows}\n                </tbody>\n              </table>\n\n\n            </div>\n\n        <br></br>\n\n        <div className=\"uk-card uk-card-default uk-card-body uk-card-hover\">\n            <h3 className=\"uk-card-title\">Accumulation Survey:</h3>\n            <table className='uk-table uk-table-striped uk-table-middle'>\n                <thead>  \n                  <tr>\n                    <th className='uk-width-small'>Debris Type</th>\n                    <th>Fresh</th>\n                    <th>Weathered</th>\n                  </tr>\n                </thead>\n                <tbody style={{textAlign: \"left\"}}>\n                  {ASRows}\n                </tbody>\n              </table>\n        </div>\n\n        <br></br>\n\n        <div className=\"uk-card uk-card-default uk-card-body uk-card-hover\">\n            <h3 className=\"uk-card-title\">Micro Debris Survey:</h3>\n        </div>\n\n        <br></br>\n\n      </div>\n    );\n  }\n}\n\nexport default Review\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nimport AccumulationSurvey from './SurveySubsections/AccumulationSurvey';\nimport MicroDebrisSurvey from './SurveySubsections/MicroDebrisSurvey';\nimport SurfaceRibScan from './SurveySubsections/SurfaceRibScan';\nimport SurveyArea from './SurveySubsections/SurveyArea';\nimport TeamInformation from './SurveySubsections/TeamInformation';\nimport Review from './SurveySubsections/Review';\n\nimport {\n    Accordion,\n} from 'react-accessible-accordion';\n\nimport './accordion-styles.css';\n\nclass SurveyForm extends Component {\n    constructor(props) {\n        super(props);\n        this.url = '/surveys'\n        this.auth = this.props.auth;\n        this.state = {\n            surveyData: {\n                // fields (id's) :\n                // TI: userFirst, userLast, orgName, orgLoc, email, cleanUpTime, cleanUpDate\n                // SA: beachName, latitude, longitude,\n                //     {usageRecreation, usageCommercial, usageOther}\n                //     {locationChoiceProximity, locationChoiceDebris, locationChoiceOther}\n                //     compassCardinal, compassDegrees, riverName, riverDistance,\n                //     {tideTypeB, tideHeightB, tideTimeB},\n                //     {tideTypeA, tideHeightA, tideTimeA},\n                //     windSpeed, windDir,\n                //     {substrateTypeSand, substrateTypePebble, substrateTypeRipRap, substrateTypeSeaweed, substrateTypeOther},\n                //\n                // SRS: rib1Start, rib2Start, rib3Start, rib4Start, rib1End, rib2End, rib3End, rib4End\n                //\n                //\n                //\n                //\n            },\n            SRSData: {\n                // format for debris is: trash_id + (\"FreshRib\" | \"WeatheredRib\") + ribNumber\n            },\n            ASData: {\n                // format for debris is: trash_id + \"accumulation\" + (\"Fresh | Weathered | Total\")\n            },\n            displayStrings: {\n                usage: \"\",\n                locChoice: \"\",\n                subType: \"\"\n            },\n            isInputting: true,\n            isReviewing: false,\n            isSubmitted: false,\n            user: \"\",\n            email: \"\",\n            userID: \"\",\n            invalidForm: false\n        }\n        this.moveToReview = this.moveToReview.bind(this);\n        this.moveToInput = this.moveToInput.bind(this);\n        this.moveToSubmit = this.moveToSubmit.bind(this);\n        this.updateSurveyState = this.updateSurveyState.bind(this);\n        this.updateCheckedState = this.updateCheckedState.bind(this);\n        this.prepareForm = this.prepareForm.bind(this);\n        this.updateSRS = this.updateSRS.bind(this);\n        this.updateAS = this.updateAS.bind(this);\n        this.showAlert = this.showAlert.bind(this);\n    }\n\n    componentDidMount() {\n        // check if user is authenticated (redirect if not)\n        if (!this.auth.isAuthenticated()) {\n            window.alert('Please sign in to continue');\n            window.location.replace('/');\n        }\n\n        // set entry user/email from auth0\n        this.auth.getLoggedInProfile((err, profile) => {\n            this.setState({\n                user: profile.name,\n                email: profile.email,\n                userID: profile.sub.split(\"|\")[1]\n            });\n        });\n    }\n\n    updateDisplayStrings() {\n        const data = this.state.surveyData;\n\n        let usage = {\n            rec: data.usageRecreation ? data.usageRecreation : undefined,\n            com: data.usageCommercial ? data.usageCommercial : undefined,\n            other: data.usageOther ? data.usageOther : undefined\n        }\n\n        let locChoice = {\n            debris: data.locationChoiceDebris ? data.locationChoiceDebris : undefined,\n            prox: data.locationChoiceProximity ? data.locationChoiceProximity : undefined,\n            other: data.locationChoiceOther ? data.locationChoiceOther : undefined\n        }\n\n        let subType = {\n            s: data.substrateTypeSand ? data.substrateTypeSand : false,\n            p: data.substrateTypePebble ? data.substrateTypePebble : false,\n            rr: data.substrateTypeRipRap ? data.substrateTypeRipRap : false,\n            sea: data.substrateTypeSeaweed ? data.substrateTypeSeaweed : false,\n            other: data.substrateTypeOther ? data.substrateTypeOther : undefined\n\n        }\n\n        this.setState({\n            displayStrings: {\n                usage: usage,\n                locChoice: locChoice,\n                subType: subType\n            }\n        })\n    }\n\n    // returns ID's of invalid elements if invalid, if not, returns empty array;\n    validate() {\n        let invalid = [];\n\n        const displayIDs = {\n            userFirst: \"First name\",\n            userLast: \"Last name\",\n            orgName: \"Organization Name\",\n            orgLoc: \"Organization Location\",\n            cleanUpTime: \"Clean Up Time\",\n            cleanUpDate: \"Clean Up Start Time\",\n            beachName: \"Name of Beach\",\n            latDir: \"Latitude Direction\",\n            lonDir: \"Longitude Direction\",\n            latDeg: \"Latitude Degrees\",\n            lonDeg: \"Longitude Degrees\",\n            latMin: \"Latitude Minutes\",\n            lonMin: \"Longitude Minutes\",\n            latSec: \"Latitude Seconds\",\n            lonSec: \"Longitude Seconds\",\n            compassDegrees: \"Compass Degrees\",\n            riverName: \"River Name\",\n            riverDistance: \"Nearest River Output Distance\",\n            usage: \"Usage\",\n            locChoice: \"Reason for Location Choice\",\n            subType: \"Substrate Type\",\n            slope: \"Slope\",\n            tideHeightA: \"Next Tide Height\",\n            tideTimeA: \"Next Tide Time\",\n            tideTypeA: \"Next Tide Type\",\n            tideHeightB: \"Last Tide Height\",\n            tideTypeB: \"Last Tide Type\",\n            tideTimeB: \"Last Tide Time\",\n            windDir: \"Wind Direction\",\n            windSpeed: \"Wind Speed\"\n\n        }\n\n        const requiredIDs = ['userFirst', 'userLast', 'orgName', 'orgLoc',\n            'cleanUpTime', 'cleanUpDate', 'beachName', 'compassDegrees', 'riverName',\n            'riverDistance', 'slope', 'tideHeightA', 'tideHeightB', 'tideTimeA',\n            'tideTimeB', 'tideTypeA', 'tideTypeB', 'windDir', 'windSpeed',\n            'cleanUpTime', 'cleanUpDate', 'beachName', 'riverName',\n            'latDeg', 'latMin', 'latSec', 'latDir', 'lonDeg', 'lonMin', 'lonSec', 'lonDir'\n        ];\n\n\n        //Check for fields that need just a single entry\n        for (const id of requiredIDs) {\n            if (this.state.surveyData[id] === undefined) {\n                invalid.push(displayIDs[id]);\n                console.log(id);\n                if (document.getElementById(id))\n                    document.getElementById(id).classList.add('invalidInput');\n            }\n        }\n\n        //Check for usage\n        if(!this.state.surveyData.usageRecreation\n            && !this.state.surveyData.usageCommercial\n                && !this.state.surveyData.usageOther)\n                invalid.push(displayIDs.usage);\n\n        //Check if the user filled out the reason for location choice\n        if(!this.state.surveyData.locationChoiceDebris && !this.state.surveyData.locationChoiceProximity\n            && !this.state.surveyData.locationChoiceOther)\n            invalid.push(displayIDs.locChoice);\n\n        // Check if the user filled out the substrate type\n        if(!this.state.surveyData.substrateTypeSand && !this.state.surveyData.substrateTypePebble && !this.state.surveyData.substrateTypeRipRap\n            && !this.state.surveyData.substrateTypeSeaweed && !this.state.surveyData.substrateTypeOther)\n            invalid.push(displayIDs.subType);\n\n\n        return invalid;\n    }\n\n\n    navToID(ids) {\n        alert(\"Please fill out the following: \" + ids)\n    }\n\n    /*\n     * moveToReview: Switches to the review state, checks to see if the required entries have\n     * been input by the user\n     */\n    moveToReview() {\n        const invalidInput = this.validate();\n        if (invalidInput && invalidInput.length) {\n            this.setState({ invalidForm: true})\n        }\n        else {\n            this.updateDisplayStrings();\n            this.setState({\n                invalidForm: false,\n                isInputting: false,\n                isReviewing: true,\n                isSubmitted: false,\n            })\n        }\n    }\n\n    showAlert() {\n        return (\n            <div className=\"uk-alert-danger uk-padding-small\">\n                <p>Whoops! Looks like you didn't fill out some required fields. Please go back and fill them out.</p>\n            </div>\n        )\n    }\n\n    moveToInput() {\n        this.setState({\n            isInputting: true,\n            isReviewing: false,\n            isSubmitted: false\n        })\n    }\n\n    /*\n     * moveToSubmit: successfully submits the form if the validation in the backend passes\n     */\n    moveToSubmit() {\n        const form = this.prepareForm();\n\n        axios.post(\"beaches/surveys\", form)\n            .then(res => {\n                if (res.data.survID) {\n                    this.setState({\n                        isInputting: false,\n                        isReviewing: false,\n                        isSubmitted: true\n                    })\n                }\n            })\n            .catch(err => {\n                console.log(err.response);\n                alert(err.response.data.error.details[0].message);\n            })\n    }\n\n\n\n    toTitleCase(word) {\n        return word.replace(/\\w\\S*/g, function (txt) { return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase(); });\n    };\n\n    convertToDecimalDegrees(d, min, sec, dir) {\n        return parseFloat(dir) * (parseFloat(d) + (parseFloat(min)/60.0) + (parseFloat(sec)/3600.0));\n    }\n\n    calcTotalsSRS() {\n        let totals = {};\n        let totalsArray = [];\n\n        const data = this.state.SRSData;\n\n        for (const id in data) {\n            const noNum = id.replace(/__[1-4]/, '');\n            const trash_id = noNum.replace(/__\\w+/, '');\n            const type = noNum.replace(/\\w+__/, '');\n            if (!totals[trash_id]) {\n                totals[trash_id] = {\n                    fresh: 0,\n                    weathered: 0\n                }\n            }\n            if (type === \"weathered\") {\n                totals[trash_id].weathered = totals[trash_id].weathered + parseInt(data[id]);\n                if(isNaN(totals[trash_id].weathered)) {\n                    totals[trash_id].weathered = 0;\n                }\n            } else {\n                totals[trash_id].fresh = totals[trash_id].fresh + parseInt(data[id]);\n                if(isNaN(totals[trash_id].fresh)) {\n                    totals[trash_id].fresh = 0;\n                }\n            }\n        }\n        for (const id in totals) {\n            totalsArray.push([\n                id,\n                { fresh: totals[id].fresh, weathered: totals[id].weathered }\n            ]);\n            console.log(totalsArray);\n        }\n        return totalsArray;\n    }\n\n    /*\n     * Caculate the totals for the accumulcation sweep\n     */\n    calcTotalsAS() {\n        let totals = {};\n        let totalsArray = [];\n\n        const data = this.state.ASData;\n\n        for (const id in data) {\n            const noAcc = id.replace(/__accumulation/i, '');\n            const trash_id = noAcc.replace(/__\\w+/, '');\n            const type = noAcc.replace(/\\w+__/, '');\n            if (!totals[trash_id]) {\n                totals[trash_id] = {\n                    fresh: 0,\n                    weathered: 0\n                }\n            }\n            if (type === \"weathered\") {\n                totals[trash_id].weathered = totals[trash_id].weathered + parseInt(data[id]);\n                if(isNaN(totals[trash_id].weathered)) {\n                    totals[trash_id].weathered = 0;\n                }\n            } else {\n                totals[trash_id].fresh = totals[trash_id].fresh + parseInt(data[id]);\n                if(isNaN(totals[trash_id].fresh)) {\n                    totals[trash_id].fresh = 0;\n                }\n            }\n        }\n        for (const id in totals) {\n            totalsArray.push([\n                id,\n                { fresh: totals[id].fresh, weathered: totals[id].weathered }\n            ]);\n        }\n        return totalsArray;\n    }\n\n    prepareForm() {\n        // for that visual AESTHETIC\n\n        const data = this.state.surveyData;\n        const show = this.state.displayStrings;\n\n        const form = {\n            survData: {\n                user: {\n                    f: (data.userFirst ? data.userFirst : \"\"),\n                    l: (data.userLast ? data.userLast : \"\")\n                },\n                email: this.state.email,\n                userID: this.state.userID,\n                org: (data.orgName ? data.orgName : \"\"),\n                reason: (show.locChoice ? show.locChoice : \"No reason\"),\n                survDate: new Date(data.cleanUpDate + \"T\" + data.cleanUpTime),\n                st: (show.subType ? show.subType : \"\"),\n                slope: (data.slope ? data.slope : \"\"),\n                cmpsDir: (data.compassDegrees ? data.compassDegrees : 100),\n                lastTide: {\n                    type: (data.tideTypeB ? data.tideTypeB : \"\"),\n                    time: (data.tideTimeB ? data.tideTimeB : \"\"),\n                    height: (data.tideHeightB ? data.tideHeightB : \"\")\n                },\n                nextTide: {\n                    type: (data.tideTypeA ? data.tideTypeA : \"\"),\n                    time: (data.tideTimeA ? data.tideTimeA : \"\"),\n                    height: (data.tideHeightA ? data.tideHeightA : \"\")\n                },\n                wind: {\n                    dir: (data.windDir ? data.windDir : \"\"),\n                    spd: (data.windSpeed ? data.windSpeed : \"\")\n                },\n                majorUse: (show.usage ? show.usage : \"\"),\n                /* SRSDebris: [\n                    [cigaretteButts, {\n                        fresh (total):\n                        weathered (total):\n                    }],\n                    ...\n                ]\n                */\n                numOfP: 0,\n                SRSDebris: this.calcTotalsSRS(),\n                ASDebris: this.calcTotalsAS(),\n            },\n            bID: data.beachID ? data.beachID : undefined,\n            beachData: data.beachID ? undefined : {\n                n: data.beachName.replace(/\\s/g, \"_\"),\n                nroName: data.riverName.replace(/\\s/g, \"_\"),\n                lat: this.convertToDecimalDegrees(data.latDeg, data.latMin, data.latSec, data.latDir),\n                lon: this.convertToDecimalDegrees(data.lonDeg, data.lonMin, data.lonSec, data.lonDir),\n                nroDist: data.riverDistance\n            }\n        }\n\n        return form;\n    }\n\n    updateCoordState = (coordInfo, riverName, riverDist) => {\n\n        this.setState(prevState => {\n\n            for(const key in coordInfo) {\n                prevState.surveyData[key] = coordInfo[key];\n            }\n            prevState.surveyData.riverName = riverName;\n            prevState.surveyData.riverDistance = riverDist;\n\n            return prevState;\n        })\n    }\n\n    //alternative\n    setSurveyData = (key, val) => {\n        this.setState(prevState => { prevState.surveyData[key] = val; return prevState });\n    }\n\n    updateSurveyState(e) {\n        const key = e.target.id;\n        const val = e.target.value;\n\n        this.setState(prevState => {\n            prevState.surveyData[key] = val\n            return prevState;\n        })\n\n        // Remove the invalid input styling if they are coming back from review step\n        let element = document.getElementById(key);\n        if (val && element.classList.contains('invalidInput')) {\n            if (element) { element.classList.remove('invalidInput'); }\n        }\n    }\n\n    updateCheckedState(e) {\n        const key = e.target.id;\n        const val = e.target.checked;\n        this.setState(prevState => {\n            prevState.surveyData[key] = val;\n            return prevState;\n        })\n    }\n\n    updateSRS(e) {\n        const key = e.target.id;\n        const val = e.target.value;\n        this.setState(prevState => {\n            prevState.SRSData[key] = val;\n            return prevState;\n        })\n    }\n\n    updateAS(e) {\n        const key = e.target.id;\n        const val = e.target.value;\n        this.setState(prevState => {\n            prevState.ASData[key] = val;\n            return prevState;\n        })\n    }\n\n    showInputPage = () => {\n        return (\n            <div>\n                {this.state.invalidForm ? this.showAlert() : null}\n                <form id=\"surveyForm\">\n                    <Accordion>\n                        <TeamInformation data={this.state.surveyData} updateSurveyState={this.updateSurveyState} />\n                        <SurveyArea\n                          data={this.state.surveyData}\n                          setSurveyData={this.setSurveyData}\n                          updateSurveyState={this.updateSurveyState}\n                          updateCheckedState={this.updateCheckedState}\n                          updateCoordState={this.updateCoordState}\n                        />\n                        <SurfaceRibScan\n                          data={this.state.surveyData}\n                          SRSData={this.state.SRSData}\n                          updateSurveyState={this.updateSurveyState}\n                          updateSRS={this.updateSRS}\n                        />\n                        <AccumulationSurvey\n                          data={this.state.ASData}\n                          updateAS={this.updateAS} />\n                        <MicroDebrisSurvey\n                          data={this.state.surveyData}\n                          updateSurveyState={this.updateSurveyState}\n                        />\n                    </Accordion>\n                </form>\n                <div className=\"submit-button-container\" >\n                    <button className=\"uk-button uk-button-secondary\" onClick={this.moveToReview} >Review</button>\n                </div>\n            </div>\n        );\n\n    }\n\n    showReviewPage = () => {\n        return (\n            <div>\n                <button className=\"uk-button uk-button-secondary\" onClick={this.moveToInput} >Back to Input</button>\n                <Review data={this.state.surveyData} email={this.state.email}SRSData={this.state.SRSData} ASData={this.state.ASData} displayStrings={this.state.displayStrings} />\n                <button className=\"uk-button uk-button-disabled\" onClick={this.moveToSubmit}>Submit </button>\n            </div>);\n    }\n\n    showSubmitPage = () => {\n        return (\n            <div>\n                <h1>Your survey was successfully submitted!</h1>\n                <h3>Click <Link to=\"/home\" > here</Link> to view your survey.</h3>\n                <div className=\"submit-button-container\">\n                    <button className=\"uk-button uk-button-secondary\" onClick={this.moveToReview} >\n                        Back to Review\n                    </button>\n                </div>\n            </div>\n        );\n    }\n\n\n    render() {\n        return (\n            <div className=\"centering-container\" >\n                {(this.state.isInputting && this.showInputPage()) ||\n                    (this.state.isReviewing && this.showReviewPage()) ||\n                    (this.state.isSubmitted && this.showSubmitPage())}\n            </div>\n        );\n    }\n}\n\nexport default SurveyForm;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass UserProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      profile: {},\n      data: [],\n    }\n\n    this.loadCommentsFromServer = this.loadCommentsFromServer.bind(this);\n    this.addUserEntries = this.addUserEntries.bind(this);\n    this.url = '/beaches';\n  }\n\n  loadCommentsFromServer() {\n    axios.get(this.url)\n      .then(res => {\n        this.setState({ data: res.data });\n      });\n  }\n\n  addUserEntries(data) {\n    let root = document.getElementById('user-entries');\n    let newHTML = \"\";\n    for (let i = 0; i < data.length; i++) {\n      for (let j= 0; j < data[i].entries.length; j++) {\n        newHTML += (\"<li><a href='/entry/\" + data[i].entries[j]._id + \"'/>\" + data[i].entries[j].date +\"</a></li>\");\n      }\n    }\n    root.innerHTML = newHTML;\n  }\n\n  // returns profile from auth0 when component loads\n  componentWillMount() {\n    const { userProfile, getLoggedInProfile } = this.props.auth;\n    if (!userProfile) {\n      getLoggedInProfile((err, profile) => {\n        this.setState({ profile });\n      });\n    } else {\n      this.setState({ profile: userProfile });\n    }\n  }\n\n  componentDidMount() {\n    this.loadCommentsFromServer();\n  }\n\n  render() {\n    const { profile } = this.state;\n    return (\n      <div className=\"uk-card uk-card-default uk-width-1-4 uk-align-center\">\n        <div className=\"uk-card-header uk-align-center\">\n          <img className=\"uk-border-circle uk-padding-remove uk-align-center\" width=\"100\" height=\"100\" src={ profile.picture } alt=\"\" />\n          <h2 className=\"uk-card-title uk-padding-remove uk-margin-remove-bottom uk-text-center\">{ profile.name }</h2>\n          <button onClick={ this.props.auth.logout } className= \"uk-align-center uk-padding-remove-top uk-button-small uk-button-primary\">Log Out</button>\n        </div>\n        <div className=\"uk-card-body\">\n            <p>Email: <a href={`mailto:${ profile.email }`}>{ profile.email }</a></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;\n\n","import React from 'react';\nimport coi from './COI.png'\n\nexport function ProtocolPage() {\n  \n  return (\n    <div className= \"uk-padding uk-padding-remove-vertical\">\n    <div className= \"uk-width-1-1 uk-flex uk-flex-middle\">\n\n      <div className= \"uk-width-3-4 uk-text-bottom uk-flex\">\n      <h2 className= \"uk-text-bold\">The COI Beach Cleanup Protocol</h2>\n      </div>\n      <div className= \"uk-width-1-4\">\n              <img src={coi} alt=\"coi\" className=\"\"></img>\n            </div>\n    \n      </div>\n    <div>\n      <h3>Why Pick Up Beach Trash?</h3>\n      <p>\n        Marine debris is one of the top three concerns for ocean health today and is only getting worse because of the \n        rapid rate at which plastic products are made. The impacts of debris in the environment are devastating, but \n        anyone can help reduce the damage by participating in or leading beach cleanups. \n      </p>\n      <p>\n        Beyond beach cleanups, marine debris monitoring programs are necessary to compare debris sources, amounts, \n        locations, and movement internationally. This data can be used to influence policy and provide insight into \n        where problem areas are.\n      </p>\n      <p>\n        To combine the power of beach cleanups and marine debris monitoring, we have developed a standardized protocols\n        to gather data from beach cleanups and ways to analyze the differences in debris between regions and over time.\n      </p>\n      <p>\n        Download and read the Training Field Guide and the field form linked below to get started.\n      </p>\n      <a href=\"pdfs/COIDataSheet_Oct_24.pdf\" download>View Our Data Sheet </a>\n    </div>\n    </div>\n  );\n}\n\nexport default ProtocolPage;","import React from 'react';\nimport bottle from './bottle.jpg';\nimport coi from './COI.png'\n\nexport function AboutPage() {\n\n  return (\n    <div>\n      <div className=\"uk-width-1-1 uk-padding-large uk-padding-remove-bottom uk-flex uk-flex-row\">\n      <div className= \"uk-width-1-4\">\n              <img src={bottle} alt=\"bottle\" className=\"uk-padding uk-padding-remove-right\"></img>\n            </div>\n        <div className=\"uk-width-3-4 uk-padding-large uk-padding-remove-vertical\">\n          <div className=\"uk-flex uk-flex-column\">\n            <div>\n              <h2 className= \"uk-text-bold\">About the Marine Plastic Monitor</h2>\n            </div>\n            <div className=\"uk-flex uk-flex-column\">\n              <p>Marine debris is one of the top three concerns for ocean health today and is only getting worse because of the rapid rate at which plastic products are made. The impacts of debris in the environment are devastating, but anyone can help reduce the damage by participating in or leading beach cleanups.</p>\n              <p>Beyond beach cleanups, marine debris monitoring programs are necessary to compare debris sources, amounts, locations, and movement internationally. This data can be used to influence policy and provide insight into where problem areas are.</p>\n              <p>To combine the power of beach cleanups and marine debris monitoring, we have developed a standardized protocols to gather data from beach cleanups and ways to analyze the differences in debris between regions and over time.</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"uk-width-1-1 uk-padding-large uk-flex uk-flex-middle\">\n            <div className= \"uk-width-1-2 uk-padding uk-text-center\">\n              <h2 className= \"uk-text-bold\">About Clean Oceans International</h2>\n            </div>\n            <div className= \"uk-width-1-3 uk-padding\">\n              <img src={coi} alt=\"coi\"></img>\n            </div>\n            </div>\n          <div className=\"uk-width-1-1 uk-padding uk-padding-remove-vertical uk-flex\">\n            <div className= \"uk-width-1-2 uk-padding uk-padding-remove-vertical\">\n            <p>Clean Oceans International (COI) is a Santa Cruz, California based 501c3 non-profit. Our mission is to develop practical solutions to plastic pollution through innovation, education, and direct action.</p>\n            <p>Our agenda is organized in phases to provide educated volunteers.</p>\n            <p>COI’s first phase works with student volunteers conducting simple research of plastic pollution deposition, generating useful information with minimal financial outlay and creating awareness of plastic pollution through community networking.</p>\n            <p>The second facet is independent testing of Plastic to Fuel (PTF) technology to convert plastic waste into diesel fuel using safe, clean electrical heat. This technology still has unanswered questions so testing is conducted through academic institutions in collaboration with the manufacturer, waste management infrastructure, area business and agricultural industry.</p>\n            <p>These trials will also produce financial guidelines for profitable deployment of this emerging technology internationally.</p>\n            </div>\n            <div className= \"uk-width-1-2 uk-padding uk-padding-remove-vertical\">\n            <p>Scalable infrastructure to profitably convert plastic into liquid fuel generates localized financial motivation to manage plastic waste as a valuable resource rather than a nuisance. Just as cash deposits have almost eliminated can and bottle debris, value for plastic scrap incentivizes plastic collection and recycling.</p>\n            <p>COI’s third facet is direct action, where we apply what we have learned to solve a specific problem. Our expeditions page discusses our trips to Alaska and Hawaii and the British Virgin Islands.</p>\n            <p>In 2013-16 COI staff and volunteers collected debris and talked trash in Hawaii, Alaska, Brazil, British Virgin Islands, Oregon and California.</p>\n            <p>These tests and trials are an important prelude to deploying a vessel to collect and process floating plastic in site. In time that will become a practical extension of this research and we will have the resources to do that effectively and efficiently.</p>\n            </div>\n          </div>\n        </div>\n  );\n}\n\nexport default AboutPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass ChooseForm extends Component {\n  constructor(props) {\n    super(props);\n    // 0 means they didn't check the box\n    // 1 means they did check the box\n    this.state = {\n      BasicCleanUp: '0',\n      SurfaceRibScan: '0',\n      AccumulationSurvey: '0',\n    }\n\n    this.handleFormUpdate = this.handleFormUpdate.bind(this);\n    this.setLocalStorage = this.setLocalStorage.bind(this);\n  }\n\n  // toggles the value of the state (the id is the name of the corresponding state)\n  handleFormUpdate(e) {\n    if (e.target.checked) this.setState({ [e.target.id]: '1' });\n    else this.setState({ [e.target.id]: '0' });\n  }\n\n  // saves the values from the state to localStorage\n  setLocalStorage(){\n    localStorage.setItem(\"BasicCleanUp\", this.state.BasicCleanUp);\n    localStorage.setItem(\"SurfaceRibScan\", this.state.SurfaceRibScan);\n    localStorage.setItem(\"AccumulationSurvey\", this.state.AccumulationSurvey);\n  }\n\n  render(){\n    return(\n      <div className=\"uk-margin\">\n        <h3 className=\"uk-text-center\">\n          Choose which type of clean up surveys you have performed\n        </h3>\n        <ul className=\"uk-list uk-list-large uk-list-divider uk-text-center\">\n          <li>\n            <input\n              className=\"uk-checkbox uk-margin-right\"\n              id=\"BasicCleanUp\"\n              type=\"checkbox\"\n              onChange={this.handleFormUpdate}\n            />\n            <label>Basic Cleanup</label>\n          </li>\n          <li>\n            <input\n              className=\"uk-checkbox uk-margin-right\"\n              id=\"SurfaceRibScan\"\n              type=\"checkbox\"\n              onChange={this.handleFormUpdate}\n            />\n            <label>Surface Rib Scan</label>\n          </li>\n          <li>\n            <input\n              className=\"uk-checkbox uk-margin-right\"\n              id=\"AccumulationSurvey\"\n              type=\"checkbox\"\n              onChange={this.handleFormUpdate}\n            />\n            <label>Accumulation Survey</label>\n          </li>\n        </ul>\n        <Link\n          className=\"uk-button uk-button-primary uk-align-center uk-width-1-3\"\n          onClick={ this.setLocalStorage }\n          to=\"./survey\"\n        >\n          Enter Survey\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default ChooseForm;\n","import React, { Component } from 'react';\nimport { sumTotals } from \"../_helpers/ChartHelpers\";\nimport ReactChartkick, { ColumnChart as BarChart, PieChart as PChart } from \"react-chartkick\";\nimport { Chart } from \"chart.js\";\nReactChartkick.addAdapter(Chart);\n\nclass ColumnChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showSRSData: true,\n            srsBarData: sumTotals(this.props.chartData, true),\n            asBarData: sumTotals(this.props.chartData, false)\n        }\n    }\n\n    componentWillReceiveProps({ chartData }) {\n        this.setState({\n            srsBarData: sumTotals(chartData, true),\n            asBarData: sumTotals(chartData, false)\n        });\n\n    }\n\n    changeBarGraph = (e) => {\n        this.setState({ showSRSData: e.target.value === 'srs' });\n    }\n\n    render() {\n        return (\n            <div className=\"uk-width-3-4\">\n                <div className=\"uk-card uk-card-default uk-card-body\">\n                    <h3 className=\"uk-card-title\">Number of Pieces of Debris Collected</h3>\n                    <select className=\"uk-select uk-form-large\" id='bar-type' onChange={this.changeBarGraph}>\n                        <option value=\"srs\">in Surface Rib Scan Surveys</option>\n                        <option value=\"as\">in Accumulation Sweep Surveys</option>\n                    </select>\n                    <div className=\"uk-align-center\" style={{ width: '45vw' }}>\n                        <BarChart data={this.state.showSRSData ? this.state.srsBarData : this.state.asBarData} library={{ animation: { animateScale: true } }} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nlet PieChart = ({ chartData }) =>\n    <div className=\"uk-grid-margin uk-width-1-1\">\n        <div className=\"uk-card uk-card-default uk-card-body\">\n            <h3 className=\"uk-card-title\">Debris Totals By Percent</h3>\n            <p>Hover over segments to see percentages</p>\n            <PChart id=\"pieChart\" data={chartData} legend = \"right\" library={{ animation: { animateRotate: true }, responsive: true }} height=\"370px\" width=\"450px\" />\n        </div>\n    </div>;\n\nexport { ColumnChart, PieChart };","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport GoogleMapReact from 'google-map-react';\nimport { ColumnChart, PieChart } from \"./Charts\";\nimport axios from 'axios';\nimport { getDebrisMap } from '../NewSurveyForm/debrisInfo'\n// to get the pin styles\nimport '../Map/Map.css';\n\nconst debrisInfo = getDebrisMap();\n\nclass Location extends Component {\n  constructor(props) {\n    super(props);\n    // the data is passed from ../Home/Home.js from the Link\n    // this.props.location.state is where the Link passes the state to\n    let beachData = this.props.location.state.data;\n    let userProfile = this.props.location.state.userProfile;\n\n    this.state = {\n      beachData,\n      pieChartData: {},\n      surveys: null,\n      userProfile,\n     // getUserProfile,\n     // isAuth\n    }\n    this.getLatLon = this.getLatLon.bind(this);\n  }\n\n  /* \n   * getStats(): \n   *  This function gets all the survey IDs using the given location's ID.\n   *  Once it gets the survey IDs, it will then loop through each ID to obtain the actual\n   *  survey contents that are stored in the database. These will be used for displaying the\n   *  chart data as well as provide the data when the use clicks the links on the side of\n   *  the page.\n   * \n   *  Arguments: none (retrieves beach IDs stored in state)\n   *  \n   *  Returns: No return values, but it will store an array of survey information in this.state.surveys\n   * \n   *  Raises: none\n  */\n  getStats = () => {\n    axios.get(`/beaches/${this.state.beachData._id}`)\n      .then(res => {\n        this.setState({ surveyIDs: res.data });\n      })\n      .then( () => {\n        //Here, we're gonna need to make a promise so that we'll get the surveys in order\n        let promise = [];\n        let trueSurveys = [];\n        for(var i = 0; i < this.state.surveyIDs.length; i++){\n          promise.push(axios.get(`/beaches/surveys/${this.state.surveyIDs[i].survey}`));\n            \n        }\n        // Then, take that promise and fill the surveys field in the correct order \n        axios.all(promise)\n          .then((response) => {\n            response.map(res => {trueSurveys.push(res.data.survData)\n              console.log(res.data);\n\n            })\n          })\n          .then(() => this.setState({surveys: trueSurveys}));\n      });\n        // Then, grab the stats for the beach\n      axios.get(`/beaches/${this.state.beachData._id}/stats`)\n      .then( res => {\n        var categories = res.data.typesOfDebrisFound;\n        var total = 0;\n        var cleanCategories = {};\n        for(const trash in categories){\n          total+=categories[trash];\n        }\n        for(const trash in categories){\n          categories[trash] /= total;\n          let infoEntry = debrisInfo[trash];\n          if(infoEntry === \"Fishing Line / Polypropylene Rope\")\n            infoEntry = \"Fishing Line\";\n          if(infoEntry === \"Plastic Bottles / Plastic Caps\")\n            infoEntry = \"Plastic Bottles\";\n          cleanCategories[infoEntry] = Math.round(categories[trash]*100); \n        }\n        this.setState({beachStats: cleanCategories});\n      });\n   \n  }\n\n  getLatLon() {\n    axios.get(`/beaches/${this.state.beachData._id}/coords`)\n      .then( res => {\n        var bData = this.state.beachData;\n        bData.lon = res.data.lon;\n        bData.lat = res.data.lat;\n        this.setState({beachData: bData});\n      })\n\n  }\n\n  componentDidMount() {\n    this.getStats();\n    // There's no latitude or longitude, we need to fetch it from the server\n    if(!this.state.beachData.lat && !this.state.beachData.lon){\n      this.getLatLon();\n    }\n    \n  }\n\n\n  render() {\n    let { lat, lon, name: beachName } = this.state.beachData;\n    console.log(this.state.surveys);\n    let surveys = [];\n    // for every entry, returns a link to the entry page\n    // text is the date cleanup happened\n    let subDate;\n    for (const submitDate in this.state.surveys) {\n      const entry = this.state.surveys[submitDate];\n      subDate = new Date(entry.survDate);\n      surveys.push(\n        <li key={entry._id}>\n          <Link className=\"uk-link-muted\"\n                to={{ pathname: `/surveys/${entry._id.replace(' ', '-')}`,\n                        state: {beachName: this.state.beachData.n, surveyID: entry._id, info: this.state.beachData, \n                        userProfile: this.state.userProfile/*, getUserProfile: this.state.getUserProfile, isAuth:this.state.isAuth*/} }}>\n                    \n                {subDate.toLocaleDateString()}            \n          </Link>\n        </li>\n      );\n    }\n    let checkRange = (num, isLat) => {\n      let isInRange = false;\n      if (isLat && num < 91 && num > -91) isInRange = true;\n      else if (!isLat && num < 181 && num > -181) isInRange = true;\n      return isInRange;\n    }\n    // the marker for the location on the map\n    const CustomMarker = ({ name }) => <div className=\"custom-marker\"><p>{name}</p></div>;\n    return (\n      <div className=\"uk-container\">\n        <h1 className=\"uk-text-primary uk-heading-primary\">{this.state.beachData.n}</h1>\n        <div className=\"uk-grid uk-grid-match\">\n          <ColumnChart chartData={this.state.surveys} />\n          <div className=\"uk-width-1-4\">\n            <div className=\"uk-card uk-card-default uk-card-body\">\n              <h3 className=\"uk-card-title\">Survey Entries</h3>\n              <ul>\n                {surveys}\n              </ul>\n            </div>\n          </div>\n          <div className='uk-grid-margin uk-width-1-3'>\n          {\n            lat && lon && checkRange(lat, true) && checkRange(lon, false) ?\n              (<div style={{ height: '550px', width: '500px' }} className=\"uk-card uk-card-default uk-card-body\">\n                <GoogleMapReact\n                  defaultCenter={{\n                    lat: lat,\n                    lng: lon,\n                  }}\n                  defaultZoom={13}\n                  bootstrapURLKeys={{\n                    key: ['AIzaSyC0KMFMCzYY0TZKQSSGyJ7gDW6dfBIDIDA']\n                  }}\n                >\n                  <CustomMarker\n                    lat={lat}\n                    lng={lon}\n                    name={beachName}\n                  />\n                </GoogleMapReact>\n              </div>) : null\n          }\n          </div>\n          <div className=\"uk-grid-margin uk-width-2-3\">\n            <PieChart chartData={this.state.beachStats} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Location;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport './notFound.css';\n\nfunction PageNotFound () {\n    return(\n      <div className=\"center-parent\">\n        <div className=\"text-container uk-position-center\">\n          <h1><span className=\"error-text\">404</span>: Page Not Found!</h1>\n          <h3>Thinking outside the box is great, but not when it involves website urls...</h3>\n          <h3>...click <Link to=\"/home\">here</Link> to go back home.</h3>\n        </div>\n\n      </div>\n    )\n}\n\nexport default PageNotFound;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n// the authentication object is passed through props from App.js\n// which is used to check if the user is currently logged in\n// and to sign in (links in header depend on status)\n\nclass Submenu extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n  render() {\n    return (\n         <nav className=\"uk-navbar uk-navbar-container uk-navbar-transparent uk-margin-bottom-small uk-dropdown-nav \">\n            <div className=\"uk-navbar-left\">\n              <ul className=\"nav__submenu uk-nav uk-dropdown-nav \" >\n\n              <li className=\"nav__submenu-item \" ><Link to=\"/home\">Home</Link></li>\n              \n              { this.props.auth.isAuthenticated()\n                ? <li className=\"nav__submenu-item \"><Link to='/survey'>Add Survey</Link></li>\n                : null\n              }\n              \n              <li className=\"nav__submenu-item \"><Link to=\"/protocol\">Protocol</Link></li>\n              <li className=\"nav__submenu-item \"><Link to=\"/about\">About</Link></li>\n          \n              { this.props.auth.isAuthenticated()\n                ? <li className=\"nav__submenu-item \"><Link to='/profile'>Profile</Link></li>\n                : null\n              }\n\n              </ul>\n            </div>\n\n      </nav>\n    )\n    }\n  }\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAboutMenu: false\n    };\n  }\n\nhandleHover = () => {\n    this.setState({ showAboutMenu: true });\n  };\n\n  handleLeave = () => {\n    this.setState({ showAboutMenu: false });\n  };\n\nrender() {\n   return (\n     <div className=\"uk-padding-small uk-padding-remove-top\">\n      <nav className=\"uk-navbar uk-navbar-container uk-navbar-transparent uk-margin-bottom-small\">\n\n        <div className=\"uk-navbar-left uk-visible@m\">\n          <ul className=\"uk-navbar-nav\">\n            <li className=\"uk-logo\">\n              <Link to=\"/home\" >\n                <h1 className=\"uk-text-large uk-margin-remove-bottom\">\n                  Marine Plastics Monitor\n                </h1>\n              </Link>\n            </li>\n            <li><Link to=\"/home\">Home</Link></li>\n\n            { this.props.auth.isAuthenticated()\n              ? <li><Link to='/survey'>Add Survey</Link></li>\n              : null\n            }\n            \n            <li><Link to=\"/protocol\">Protocol</Link></li>\n            <li><Link to=\"/about\">About</Link></li>\n\n              </ul>\n              </div>\n\n              <div className=\"uk-navbar-right uk-visible@m\">\n              <ul className=\"uk-navbar-nav\">\n                { this.props.auth.isAuthenticated()\n                  ? <li><Link to=\"/profile\">Profile</Link></li>\n                  : <li><button onClick={ this.props.auth.login } className=\"uk-button uk-button-text\">Sign Up</button></li>\n                }\n              </ul>\n              </div>\n\n            <div className=\"uk-hidden@m\">\n              <div className=\"uk-navbar-left\">\n                <ul className=\"uk-navbar-nav\">\n                <li className=\"uk-logo\">\n                  <Link to=\"/home\" >\n                    <h1 className=\"uk-text-small uk-margin-remove-bottom\">\n                      Marine Plastics Monitor\n                    </h1>\n                  </Link>\n                </li>\n                <li className=\"nav__menu-item uk-margin-remove-bottom\" onMouseLeave={this.handleLeave} >\n                    <div className=\"uk-navbar-item\" style={{textTransform:'uppercase',color:'#999'}} onMouseEnter={this.handleHover}>Menu</div>\n                        { this.state.showAboutMenu && <Submenu auth={this.props.auth}/> }\n                  </li>\n\n                </ul>\n              </div>\n          </div>\n     </nav>\n     </div>\n   )\n }\n}\n\nexport default Menu\n","import React from 'react';\n\nexport function Footer() {\n  return (\n    <div className=\"uk-grid uk-padding-large uk-margin-medium-top\">\n      <a\n        className=\"uk-width-expand uk-text-center uk-text-muted\"\n        href=\"https://cleanoceansinternational.org/\"\n      >\n        Clean Oceans International\n      </a>\n    </div>\n  );\n}\n  \nexport default Footer;\n  ","// The main component of the project\n// All of the routing/handling of different pages happens here\n\nimport React, { Component } from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\n\nimport Auth from './Auth';\n\nimport Landing from './Landing/Landing';\nimport Home from './Home/Home';\nimport SurveyEntry from './SurveyEntry/SurveyEntry';\nimport SurveyForm from './NewSurveyForm/SurveyForm'\n\nimport UserProfile from './UserProfile/UserProfile';\nimport Protocol from './Protocol/Protocol';\nimport About from './About/About';\nimport Map from './Map/Map.js';\nimport ChooseForm from './SurveyForm/ChooseForm';\nimport LocationPage from './Location/Location';\nimport PageNotFound from './PageNotFound/PageNotFound';\n\nimport Header from './Header/Header';\nimport Footer from './Footer/Footer';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    require('dotenv').config()\n    super();\n    // creates a new authentication object, which can be passed to other components\n    this.auth = new Auth();\n    this.state = { error: \"\" };\n  }\n\n  componentDidMount() {\n    // checks if the user is logged in or not (see Auth.js for the function)\n    this.auth.handleAuthentication(error => {\n      this.setState({ error });\n    });\n\n    if (this.auth.isAuthenticated()) {\n      this.auth.getLoggedInProfile((err, profile) => {\n        this.setState({ userProfile: profile });\n      });\n\n    } else {\n      this.setState({ userProfile: null });\n    }\n  }\n\n  render() {\n    let headerRoutes = ['/home', '/survey', '/newsurvey', '/location/:beachID', '/:beachName/:surveyID', '/profile', '/protocol', '/about', '/map', '/chooseform'];\n\n    return (\n      <div>\n        {/* type of router that has history (can go back and forth in broswer history and still have states from before) */}\n        <BrowserRouter>\n\n\n          <div className=\"uk-container-expand uk-container-center\">\n\n            {/* pages listed in headerRoutes array are rendered with the Header*/}\n            <Route path={headerRoutes} render={() => (<Header auth={this.auth} />)} />\n\n\n            <div>\n              {/* routes: when the user goes to a specified url, loads corresponding component */}\n              {/* if passing information (i.e. authentication) to the component, need to use render argument */}\n              <Switch>\n                <Route exact path='/' render={() => (<Landing auth={this.auth} isAuth={this.state.error} disableError={() => { this.setState({ error: null }) }} />)} />\n                <Route exact path='/home' render={() => <Home userProfile={this.state.userProfile} />} />\n\n                {/* for testing new component: */}\n                <Route path='/survey' render={()=><SurveyForm auth={this.auth}/>}/>\n                <Route path='/location/:beachID' component={LocationPage} />\n                <Route path='/:beachName/:surveyID' component={SurveyEntry} />\n                {/* for the profile page: if user is logged in, load the userprofile component. otherwise redirect to landing page */}\n                <Route\n                  path='/profile'\n                  render={() => (\n                    !this.auth.isAuthenticated()\n                      ? <Redirect to='/' />\n                      : <UserProfile auth={this.auth} />\n                  )}\n                />\n                <Route exact path='/protocol' component={ Protocol } />\n                <Route exact path='/about' component={ About } />\n                <Route path='/map' render={() => <Map userProfile={this.state.userProfile} />}/>\n\n                <Route exact path='/about' component={ About } />\n              \n                <Route path='/chooseform' component={ ChooseForm } />\n\n                <Route component={PageNotFound} />\n              </Switch>\n            </div>\n\n            {/* Render the footer if you're not on the Landing Page*/}\n            <Route path={headerRoutes} component={Footer} />\n\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/beach-edit.bd7f0104.jpg\";","module.exports = __webpack_public_path__ + \"static/media/COI.558ece49.png\";","module.exports = __webpack_public_path__ + \"static/media/bottle.6c41c024.jpg\";","module.exports = __webpack_public_path__ + \"static/media/COI.98692b64.png\";"],"sourceRoot":""}